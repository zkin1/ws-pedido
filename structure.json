{
  "config": {
    "db.config.js": "const mysql = require('mysql2/promise');\r\nconst config = require('./env.config');\r\nconst logger = require('../utils/logger');\r\n\r\n// Crear el pool de conexiones a la base de datos de pedidos\r\nconst pedidoPool = mysql.createPool({\r\n  host: config.db.host,\r\n  user: config.db.user,\r\n  password: config.db.password,\r\n  database: config.db.database,\r\n  port: config.db.port,\r\n  waitForConnections: true,\r\n  connectionLimit: 10,\r\n  queueLimit: 0\r\n});\r\n\r\n// Crear el pool de conexiones a la base de datos de inventario\r\nconst inventarioPool = mysql.createPool({\r\n  host: config.inventarioDB.host,\r\n  user: config.inventarioDB.user,\r\n  password: config.inventarioDB.password,\r\n  database: config.inventarioDB.database,\r\n  port: config.inventarioDB.port,\r\n  waitForConnections: true,\r\n  connectionLimit: 10,\r\n  queueLimit: 0\r\n});\r\n\r\n// Función para verificar conexiones\r\nasync function testConnections() {\r\n  try {\r\n    // Verificar conexión a base de datos de pedidos\r\n    const pedidoConnection = await pedidoPool.getConnection();\r\n    logger.info('Conexión a base de datos de pedidos establecida correctamente');\r\n    pedidoConnection.release();\r\n    \r\n    // Verificar conexión a base de datos de inventario\r\n    const inventarioConnection = await inventarioPool.getConnection();\r\n    logger.info('Conexión a base de datos de inventario establecida correctamente');\r\n    inventarioConnection.release();\r\n    \r\n    return true;\r\n  } catch (err) {\r\n    logger.error('Error al conectar a las bases de datos:', err);\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  pedidoPool,\r\n  inventarioPool,\r\n  testConnections\r\n};",
    "env.config.js": "const dotenv = require('dotenv');\r\nconst path = require('path');\r\n\r\n// Cargar variables de entorno desde el archivo .env\r\ndotenv.config({ path: path.resolve(__dirname, '../.env') });\r\n\r\nmodule.exports = {\r\n  port: process.env.PORT || 8004,\r\n  environment: process.env.NODE_ENV || 'development',\r\n  db: {\r\n    host: process.env.DB_HOST || 'localhost',\r\n    user: process.env.DB_USER || 'root',\r\n    password: process.env.DB_PASSWORD || '',\r\n    database: process.env.DB_NAME || 'ws_pedido_db',\r\n    port: process.env.DB_PORT || 3306\r\n  },\r\n  inventarioDB: {\r\n    host: process.env.INV_DB_HOST || 'localhost',\r\n    user: process.env.INV_DB_USER || 'root',\r\n    password: process.env.INV_DB_PASSWORD || '',\r\n    database: process.env.INV_DB_NAME || 'ws_inventario_db',\r\n    port: process.env.INV_DB_PORT || 3306\r\n  },\r\n  service: {\r\n    namespace: process.env.SERVICE_NAMESPACE || 'http://ferremas.cl/ws-pedido',\r\n    path: process.env.SERVICE_PATH || '/ws-pedido'\r\n  }\r\n};"
  },
  "controllers": {
    "pedido.controller.js": "const PedidoModel = require('../models/pedido.model');\r\nconst InventarioModel = require('../models/inventario.model');\r\nconst logger = require('../utils/logger');\r\nconst { validarId, validarDatosPedido, validarEstadoPedido } = require('../utils/validator');\r\n\r\n// Controlador para la lógica de pedidos\r\nconst PedidoController = {\r\n  \r\n  /**\r\n   * Crea un nuevo pedido\r\n   * @param {Object} datosPedido - Datos del pedido a crear\r\n   * @returns {Promise<Object>} Resultado de la creación\r\n   */\r\n  async crearPedido(datosPedido) {\r\n    try {\r\n      // Validar datos del pedido\r\n      const validacion = validarDatosPedido(datosPedido);\r\n      if (!validacion.valido) {\r\n        return {\r\n          exito: false,\r\n          mensaje: validacion.mensaje\r\n        };\r\n      }\r\n      \r\n      // Verificar stock de productos\r\n      const items = datosPedido.detalles.map(detalle => ({\r\n        producto_id: detalle.producto_id,\r\n        cantidad: detalle.cantidad\r\n      }));\r\n      \r\n      const verificacionStock = await InventarioModel.verificarStockMultiple(items);\r\n      \r\n      if (!verificacionStock.hayStock) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"No hay stock suficiente para algunos productos\",\r\n          productosSinStock: verificacionStock.productosSinStock\r\n        };\r\n      }\r\n      \r\n      // Crear pedido\r\n      const pedidoCreado = await PedidoModel.crear(datosPedido);\r\n      \r\n      return {\r\n        exito: true,\r\n        mensaje: \"Pedido creado exitosamente\",\r\n        pedido: {\r\n          id: pedidoCreado.id,\r\n          numero_pedido: pedidoCreado.numero_pedido,\r\n          estado: pedidoCreado.estado,\r\n          total: pedidoCreado.total_final\r\n        }\r\n      };\r\n    } catch (error) {\r\n      logger.error(\"Error en crearPedido:\", error);\r\n      return {\r\n        exito: false,\r\n        mensaje: \"Error al crear el pedido: \" + error.message\r\n      };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Consulta detalles de un pedido\r\n   * @param {Object} params - Parámetros de búsqueda (id o numeroPedido)\r\n   * @returns {Promise<Object>} Resultado de la consulta\r\n   */\r\n  async consultarPedido(params) {\r\n    try {\r\n      let pedido = null;\r\n      \r\n      if (params.id && validarId(params.id)) {\r\n        pedido = await PedidoModel.obtenerPorId(params.id);\r\n      } else if (params.numeroPedido) {\r\n        pedido = await PedidoModel.obtenerPorNumero(params.numeroPedido);\r\n      } else {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"Debe especificar un ID o número de pedido válido\"\r\n        };\r\n      }\r\n      \r\n      if (!pedido) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"Pedido no encontrado\"\r\n        };\r\n      }\r\n      \r\n      return {\r\n        exito: true,\r\n        pedido\r\n      };\r\n    } catch (error) {\r\n      logger.error(\"Error en consultarPedido:\", error);\r\n      return {\r\n        exito: false,\r\n        mensaje: \"Error al consultar el pedido: \" + error.message\r\n      };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Actualiza el estado de un pedido\r\n   * @param {number} id - ID del pedido\r\n   * @param {string} nuevoEstado - Nuevo estado\r\n   * @param {string} comentario - Comentario sobre el cambio\r\n   * @returns {Promise<Object>} Resultado de la actualización\r\n   */\r\n  async actualizarEstadoPedido(id, nuevoEstado, comentario = '') {\r\n    try {\r\n      if (!validarId(id)) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"ID de pedido no válido\"\r\n        };\r\n      }\r\n      \r\n      if (!validarEstadoPedido(nuevoEstado)) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"Estado no válido\"\r\n        };\r\n      }\r\n      \r\n      const pedido = await PedidoModel.obtenerPorId(id);\r\n      if (!pedido) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"Pedido no encontrado\"\r\n        };\r\n      }\r\n      \r\n      // Validaciones específicas según el nuevo estado\r\n      if (nuevoEstado === 'pagado') {\r\n        // Verificar stock nuevamente antes de marcar como pagado\r\n        const items = pedido.detalles.map(detalle => ({\r\n          producto_id: detalle.producto_id,\r\n          cantidad: detalle.cantidad\r\n        }));\r\n        \r\n        const verificacionStock = await InventarioModel.verificarStockMultiple(items);\r\n        \r\n        if (!verificacionStock.hayStock) {\r\n          return {\r\n            exito: false,\r\n            mensaje: \"No hay stock suficiente para algunos productos\",\r\n            productosSinStock: verificacionStock.productosSinStock\r\n          };\r\n        }\r\n        \r\n        // Registrar salida en inventario al marcar como pagado\r\n        for (const detalle of pedido.detalles) {\r\n          await InventarioModel.registrarSalida(\r\n            detalle.producto_id,\r\n            detalle.cantidad,\r\n            pedido.numero_pedido\r\n          );\r\n        }\r\n      }\r\n      \r\n      // Actualizar estado\r\n      const actualizado = await PedidoModel.actualizarEstado(id, nuevoEstado, comentario);\r\n      \r\n      if (!actualizado) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"No se pudo actualizar el estado del pedido\"\r\n        };\r\n      }\r\n      \r\n      return {\r\n        exito: true,\r\n        mensaje: `Estado del pedido actualizado a: ${nuevoEstado}`\r\n      };\r\n    } catch (error) {\r\n      logger.error(\"Error en actualizarEstadoPedido:\", error);\r\n      return {\r\n        exito: false,\r\n        mensaje: \"Error al actualizar el estado del pedido: \" + error.message\r\n      };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Consulta pedidos por usuario\r\n   * @param {number} usuarioId - ID del usuario\r\n   * @returns {Promise<Object>} Resultado de la consulta\r\n   */\r\n  async consultarPedidosPorUsuario(usuarioId) {\r\n    try {\r\n      if (!validarId(usuarioId)) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"ID de usuario no válido\"\r\n        };\r\n      }\r\n      \r\n      const pedidos = await PedidoModel.obtenerPorUsuario(usuarioId);\r\n      \r\n      return {\r\n        exito: true,\r\n        pedidos\r\n      };\r\n    } catch (error) {\r\n      logger.error(\"Error en consultarPedidosPorUsuario:\", error);\r\n      return {\r\n        exito: false,\r\n        mensaje: \"Error al consultar pedidos del usuario: \" + error.message\r\n      };\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Consulta pedidos por estado\r\n   * @param {string} estado - Estado a consultar\r\n   * @returns {Promise<Object>} Resultado de la consulta\r\n   */\r\n  async consultarPedidosPorEstado(estado) {\r\n    try {\r\n      if (!validarEstadoPedido(estado)) {\r\n        return {\r\n          exito: false,\r\n          mensaje: \"Estado no válido\"\r\n        };\r\n      }\r\n      \r\n      const pedidos = await PedidoModel.obtenerPorEstado(estado);\r\n      \r\n      return {\r\n        exito: true,\r\n        pedidos\r\n      };\r\n    } catch (error) {\r\n      logger.error(\"Error en consultarPedidosPorEstado:\", error);\r\n      return {\r\n        exito: false,\r\n        mensaje: \"Error al consultar pedidos por estado: \" + error.message\r\n      };\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nmodule.exports = PedidoController;"
  },
  "logs": {
    "combined.log": "2025-05-12 18:04:57 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 18:04:57 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 18:04:57 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 18:18:51 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 18:18:51 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 18:18:51 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 18:18:51 info: Servidor HTTP iniciado en el puerto 8004\r\n2025-05-12 18:18:51 info: Servidor SOAP iniciado en: /ws-pedido\r\n2025-05-12 18:18:51 info: WSDL disponible en: /ws-pedido?wsdl\r\n2025-05-12 18:18:51 error: Error no capturado: _this_1.callback is not a function\r\n2025-05-12 18:18:51 info: Servidor WS-Pedido iniciado correctamente\r\n2025-05-12 18:23:40 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 18:23:40 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 18:23:40 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 18:23:40 info: Servidor HTTP iniciado en el puerto 8004\r\n2025-05-12 18:23:40 info: Archivo WSDL creado en: C:\\Users\\zkn\\Desktop\\ws-pedido\\services\\soap\\wsdl-file.xml\r\n2025-05-12 18:23:40 info: Servidor SOAP iniciado en: /ws-pedido\r\n2025-05-12 18:23:40 info: WSDL disponible en: /ws-pedido?wsdl\r\n2025-05-12 18:23:40 info: Servidor WS-Pedido iniciado correctamente\r\n2025-05-12 18:30:20 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 18:30:20 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 18:30:20 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 18:30:20 info: Servidor HTTP iniciado en el puerto 8004\r\n2025-05-12 18:30:20 info: Servidor SOAP iniciado en: /ws-pedido\r\n2025-05-12 18:30:20 info: WSDL disponible en: /ws-pedido?wsdl\r\n2025-05-12 18:30:20 info: Servidor WS-Pedido iniciado correctamente\r\n2025-05-12 18:36:39 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 18:36:39 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 18:36:39 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 18:36:39 info: Servidor HTTP iniciado en el puerto 8004\r\n2025-05-12 18:36:39 info: Servidor SOAP iniciado en: /ws-pedido\r\n2025-05-12 18:36:39 info: WSDL disponible en: /ws-pedido?wsdl\r\n2025-05-12 18:36:39 info: Servidor WS-Pedido iniciado correctamente\r\n2025-05-12 18:41:00 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 18:41:00 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 18:41:00 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 18:41:00 info: Servidor HTTP iniciado en el puerto 8004\r\n2025-05-12 18:41:00 info: Servidor SOAP iniciado en: /ws-pedido\r\n2025-05-12 18:41:00 info: WSDL disponible en: /ws-pedido?wsdl\r\n2025-05-12 18:41:00 info: Servidor WS-Pedido iniciado correctamente\r\n2025-05-12 18:55:24 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 18:55:24 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 18:55:24 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 18:55:24 info: Servidor HTTP iniciado en el puerto 8004\r\n2025-05-12 18:55:24 info: Servidor SOAP iniciado en: /ws-pedido\r\n2025-05-12 18:55:24 info: WSDL disponible en: /ws-pedido?wsdl\r\n2025-05-12 18:55:24 info: Servidor WS-Pedido iniciado correctamente\r\n2025-05-12 18:55:31 info: WSDL enviado al cliente\r\n2025-05-12 18:55:31 info: Solicitud SOAP recibida\r\n2025-05-12 18:55:31 info: Operación solicitada: CrearPedido\r\n2025-05-12 18:55:31 info: Respuesta SOAP enviada\r\n2025-05-12 19:02:40 info: Comprobando conexiones a las bases de datos...\r\n2025-05-12 19:02:40 info: Conexión a base de datos de pedidos establecida correctamente\r\n2025-05-12 19:02:40 info: Conexión a base de datos de inventario establecida correctamente\r\n2025-05-12 19:02:40 info: Servidor HTTP iniciado en el puerto 8004\r\n2025-05-12 19:02:40 info: Servidor SOAP iniciado en: /ws-pedido\r\n2025-05-12 19:02:40 info: WSDL disponible en: /ws-pedido?wsdl\r\n2025-05-12 19:02:40 info: Servidor WS-Pedido iniciado correctamente\r\n2025-05-12 19:02:47 info: WSDL enviado al cliente\r\n2025-05-12 19:02:47 info: Solicitud SOAP recibida\r\n2025-05-12 19:02:47 info: Operación solicitada: CrearPedido\r\n2025-05-12 19:02:47 info: Respuesta SOAP enviada\r\n2025-05-12 19:06:08 info: WSDL enviado al cliente\r\n2025-05-12 19:06:08 info: Solicitud SOAP recibida\r\n2025-05-12 19:06:08 info: Operación solicitada: CrearPedido\r\n2025-05-12 19:06:08 info: Respuesta SOAP enviada\r\n2025-05-12 19:06:08 info: Solicitud SOAP recibida\r\n2025-05-12 19:06:08 info: Operación solicitada: ConsultarPedido\r\n2025-05-12 19:06:08 info: Respuesta SOAP enviada\r\n2025-05-12 19:06:08 info: Solicitud SOAP recibida\r\n2025-05-12 19:06:08 info: Operación solicitada: ConsultarPedido\r\n2025-05-12 19:06:08 info: Respuesta SOAP enviada\r\n2025-05-12 19:06:08 info: Solicitud SOAP recibida\r\n2025-05-12 19:06:08 info: Operación solicitada: ActualizarEstadoPedido\r\n2025-05-12 19:06:08 info: Respuesta SOAP enviada\r\n2025-05-12 19:06:08 info: Solicitud SOAP recibida\r\n2025-05-12 19:06:08 info: Operación solicitada: ConsultarPedidosPorUsuario\r\n2025-05-12 19:06:08 info: Respuesta SOAP enviada\r\n2025-05-12 19:06:08 info: Solicitud SOAP recibida\r\n2025-05-12 19:06:08 info: Operación solicitada: ConsultarPedidosPorEstado\r\n2025-05-12 19:06:08 info: Respuesta SOAP enviada\r\n",
    "error.log": "2025-05-12 18:18:51 error: Error no capturado: _this_1.callback is not a function\r\n"
  },
  "models": {
    "detalle.model.js": "const { pedidoPool } = require('../config/db.config');\r\nconst logger = require('../utils/logger');\r\n\r\n// Modelo para operaciones con detalles de pedido\r\nconst DetalleModel = {\r\n  \r\n  /**\r\n   * Obtiene los detalles de un pedido\r\n   * @param {number} pedidoId - ID del pedido\r\n   * @returns {Promise<Array>} Lista de detalles\r\n   */\r\n  async obtenerPorPedidoId(pedidoId) {\r\n    try {\r\n      const [rows] = await pedidoPool.execute(\r\n        'SELECT * FROM detalles_pedido WHERE pedido_id = ?',\r\n        [pedidoId]\r\n      );\r\n      \r\n      return rows;\r\n    } catch (error) {\r\n      logger.error(`Error al obtener detalles del pedido ${pedidoId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Crea un nuevo detalle de pedido\r\n   * @param {Object} detalle - Datos del detalle\r\n   * @returns {Promise<Object>} Detalle creado\r\n   */\r\n  async crear(detalle) {\r\n    try {\r\n      const [result] = await pedidoPool.execute(\r\n        `INSERT INTO detalles_pedido (\r\n          pedido_id, producto_id, nombre_producto, cantidad, \r\n          precio_unitario, subtotal\r\n        ) VALUES (?, ?, ?, ?, ?, ?)`,\r\n        [\r\n          detalle.pedido_id,\r\n          detalle.producto_id,\r\n          detalle.nombre_producto,\r\n          detalle.cantidad,\r\n          detalle.precio_unitario,\r\n          detalle.subtotal || (detalle.cantidad * detalle.precio_unitario)\r\n        ]\r\n      );\r\n      \r\n      return {\r\n        id: result.insertId,\r\n        ...detalle\r\n      };\r\n    } catch (error) {\r\n      logger.error(`Error al crear detalle de pedido:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Elimina todos los detalles de un pedido\r\n   * @param {number} pedidoId - ID del pedido\r\n   * @returns {Promise<boolean>} true si se eliminó correctamente\r\n   */\r\n  async eliminarPorPedidoId(pedidoId) {\r\n    try {\r\n      await pedidoPool.execute(\r\n        'DELETE FROM detalles_pedido WHERE pedido_id = ?',\r\n        [pedidoId]\r\n      );\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      logger.error(`Error al eliminar detalles del pedido ${pedidoId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Calcula el total de un pedido a partir de sus detalles\r\n   * @param {Array} detalles - Lista de detalles\r\n   * @returns {Object} Totales calculados\r\n   */\r\n  calcularTotales(detalles) {\r\n    try {\r\n      let subtotal = 0;\r\n      \r\n      for (const detalle of detalles) {\r\n        const precioUnitario = parseFloat(detalle.precio_unitario);\r\n        const cantidad = parseInt(detalle.cantidad);\r\n        subtotal += precioUnitario * cantidad;\r\n      }\r\n      \r\n      return {\r\n        subtotal,\r\n        total: subtotal\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error al calcular totales:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nmodule.exports = DetalleModel;",
    "inventario.model.js": "const { inventarioPool } = require('../config/db.config');\r\nconst logger = require('../utils/logger');\r\n\r\n// Modelo para operaciones con inventario\r\nconst InventarioModel = {\r\n  \r\n  /**\r\n   * Verifica si hay stock disponible para un producto\r\n   * @param {number} productoId - ID del producto\r\n   * @param {number} cantidad - Cantidad solicitada\r\n   * @returns {Promise<boolean>} true si hay stock suficiente\r\n   */\r\n  async verificarStock(productoId, cantidad) {\r\n    try {\r\n      // Obtener stock total del producto en todas las ubicaciones\r\n      const [rows] = await inventarioPool.execute(\r\n        'SELECT SUM(cantidad) as stock_total FROM stock WHERE producto_id = ?',\r\n        [productoId]\r\n      );\r\n      \r\n      const stockTotal = rows[0].stock_total || 0;\r\n      return stockTotal >= cantidad;\r\n    } catch (error) {\r\n      logger.error(`Error al verificar stock del producto ${productoId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Verifica stock para múltiples productos\r\n   * @param {Array} items - Array de objetos {producto_id, cantidad}\r\n   * @returns {Promise<Object>} Resultado de la verificación\r\n   */\r\n  async verificarStockMultiple(items) {\r\n    try {\r\n      const resultado = {\r\n        hayStock: true,\r\n        productosConStock: [],\r\n        productosSinStock: []\r\n      };\r\n      \r\n      for (const item of items) {\r\n        const hayStock = await this.verificarStock(item.producto_id, item.cantidad);\r\n        \r\n        if (hayStock) {\r\n          resultado.productosConStock.push(item);\r\n        } else {\r\n          resultado.productosSinStock.push(item);\r\n          resultado.hayStock = false;\r\n        }\r\n      }\r\n      \r\n      return resultado;\r\n    } catch (error) {\r\n      logger.error('Error al verificar stock múltiple:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Obtiene el stock actual de un producto\r\n   * @param {number} productoId - ID del producto\r\n   * @returns {Promise<number>} Cantidad en stock\r\n   */\r\n  async obtenerStockProducto(productoId) {\r\n    try {\r\n      const [rows] = await inventarioPool.execute(\r\n        'SELECT SUM(cantidad) as stock_total FROM stock WHERE producto_id = ?',\r\n        [productoId]\r\n      );\r\n      \r\n      return rows[0].stock_total || 0;\r\n    } catch (error) {\r\n      logger.error(`Error al obtener stock del producto ${productoId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Registra una salida de inventario por venta\r\n   * @param {number} productoId - ID del producto\r\n   * @param {number} cantidad - Cantidad vendida\r\n   * @param {string} referencia - Número de pedido\r\n   * @returns {Promise<boolean>} true si se registró correctamente\r\n   */\r\n  async registrarSalida(productoId, cantidad, referencia) {\r\n    const connection = await inventarioPool.getConnection();\r\n    try {\r\n      await connection.beginTransaction();\r\n      \r\n      // Obtener ubicaciones con stock disponible\r\n      const [ubicaciones] = await connection.execute(\r\n        'SELECT id, ubicacion_id, cantidad FROM stock WHERE producto_id = ? AND cantidad > 0 ORDER BY cantidad DESC',\r\n        [productoId]\r\n      );\r\n      \r\n      if (ubicaciones.length === 0) {\r\n        throw new Error(`No hay stock disponible para el producto ${productoId}`);\r\n      }\r\n      \r\n      let cantidadPendiente = cantidad;\r\n      \r\n      // Registrar salidas de cada ubicación hasta completar la cantidad\r\n      for (const ubicacion of ubicaciones) {\r\n        if (cantidadPendiente <= 0) break;\r\n        \r\n        const cantidadADescontar = Math.min(cantidadPendiente, ubicacion.cantidad);\r\n        \r\n        // Actualizar stock\r\n        await connection.execute(\r\n          'UPDATE stock SET cantidad = cantidad - ? WHERE id = ?',\r\n          [cantidadADescontar, ubicacion.id]\r\n        );\r\n        \r\n        // Registrar movimiento\r\n        await connection.execute(\r\n          `INSERT INTO movimientos (\r\n            tipo_movimiento_id, producto_id, ubicacion_origen_id, cantidad, \r\n            documento_referencia, notas\r\n          ) VALUES (?, ?, ?, ?, ?, ?)`,\r\n          [\r\n            2, // Tipo \"SALIDA\"\r\n            productoId,\r\n            ubicacion.ubicacion_id,\r\n            cantidadADescontar,\r\n            referencia,\r\n            `Salida por venta. Pedido: ${referencia}`\r\n          ]\r\n        );\r\n        \r\n        cantidadPendiente -= cantidadADescontar;\r\n      }\r\n      \r\n      if (cantidadPendiente > 0) {\r\n        // No se pudo descontar toda la cantidad\r\n        await connection.rollback();\r\n        return false;\r\n      }\r\n      \r\n      await connection.commit();\r\n      return true;\r\n    } catch (error) {\r\n      await connection.rollback();\r\n      logger.error(`Error al registrar salida del producto ${productoId}:`, error);\r\n      throw error;\r\n    } finally {\r\n      connection.release();\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nmodule.exports = InventarioModel;",
    "pedido.model.js": "const { pedidoPool } = require('../config/db.config');\r\nconst logger = require('../utils/logger');\r\nconst DetalleModel = require('./detalle.model');\r\n\r\n// Modelo para operaciones con pedidos\r\nconst PedidoModel = {\r\n  \r\n  /**\r\n   * Genera un número de pedido único\r\n   * @returns {Promise<string>} Número de pedido generado\r\n   */\r\n  async generarNumeroPedido() {\r\n    try {\r\n      const date = new Date();\r\n      const year = date.getFullYear().toString().substr(-2);\r\n      const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n      const day = ('0' + date.getDate()).slice(-2);\r\n      \r\n      const [rows] = await pedidoPool.execute(\r\n        'SELECT COUNT(*) as count FROM pedidos WHERE DATE(fecha_pedido) = CURDATE()'\r\n      );\r\n      \r\n      const count = rows[0].count + 1;\r\n      const sequential = ('000' + count).slice(-4);\r\n      \r\n      return `PED-${year}${month}${day}-${sequential}`;\r\n    } catch (error) {\r\n      logger.error('Error al generar número de pedido:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Crea un nuevo pedido\r\n   * @param {Object} datosPedido - Datos del pedido a crear\r\n   * @returns {Promise<Object>} Pedido creado\r\n   */\r\n  async crear(datosPedido) {\r\n    const connection = await pedidoPool.getConnection();\r\n    try {\r\n      await connection.beginTransaction();\r\n      \r\n      // Generar número de pedido\r\n      const numeroPedido = await this.generarNumeroPedido();\r\n      \r\n      // Insertar datos del pedido\r\n      const [resultPedido] = await connection.execute(\r\n        `INSERT INTO pedidos (\r\n          numero_pedido, usuario_id, total, costo_envio, descuento, \r\n          impuestos, total_final, estado, metodo_pago, referencia_pago,\r\n          tipo_entrega, sucursal_retiro, nombre_receptor, direccion_entrega,\r\n          comuna_entrega, ciudad_entrega, region_entrega, telefono_contacto,\r\n          instrucciones_entrega\r\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\r\n        [\r\n          numeroPedido,\r\n          datosPedido.usuario_id,\r\n          datosPedido.total,\r\n          datosPedido.costo_envio || 0,\r\n          datosPedido.descuento || 0,\r\n          datosPedido.impuestos || 0,\r\n          datosPedido.total_final,\r\n          'pendiente', // Estado inicial\r\n          datosPedido.metodo_pago,\r\n          datosPedido.referencia_pago || null,\r\n          datosPedido.tipo_entrega,\r\n          datosPedido.sucursal_retiro || null,\r\n          datosPedido.nombre_receptor || null,\r\n          datosPedido.direccion_entrega || null,\r\n          datosPedido.comuna_entrega || null,\r\n          datosPedido.ciudad_entrega || null,\r\n          datosPedido.region_entrega || null,\r\n          datosPedido.telefono_contacto || null,\r\n          datosPedido.instrucciones_entrega || null\r\n        ]\r\n      );\r\n      \r\n      const pedidoId = resultPedido.insertId;\r\n      \r\n      // Insertar registro en historial de estados\r\n      await connection.execute(\r\n        `INSERT INTO historial_estados_pedido (pedido_id, estado_anterior, estado_nuevo, comentario)\r\n         VALUES (?, NULL, 'pendiente', 'Pedido creado')`,\r\n        [pedidoId]\r\n      );\r\n      \r\n      // Insertar detalles del pedido\r\n      for (const detalle of datosPedido.detalles) {\r\n        await connection.execute(\r\n          `INSERT INTO detalles_pedido (\r\n            pedido_id, producto_id, nombre_producto, cantidad, \r\n            precio_unitario, subtotal\r\n          ) VALUES (?, ?, ?, ?, ?, ?)`,\r\n          [\r\n            pedidoId,\r\n            detalle.producto_id,\r\n            detalle.nombre_producto,\r\n            detalle.cantidad,\r\n            detalle.precio_unitario,\r\n            detalle.cantidad * detalle.precio_unitario\r\n          ]\r\n        );\r\n      }\r\n      \r\n      await connection.commit();\r\n      \r\n      // Obtener el pedido completo\r\n      const pedidoCreado = await this.obtenerPorId(pedidoId);\r\n      \r\n      return {\r\n        id: pedidoId,\r\n        numero_pedido: numeroPedido,\r\n        ...pedidoCreado\r\n      };\r\n      \r\n    } catch (error) {\r\n      await connection.rollback();\r\n      logger.error('Error al crear pedido:', error);\r\n      throw error;\r\n    } finally {\r\n      connection.release();\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Obtiene un pedido por su ID\r\n   * @param {number} id - ID del pedido\r\n   * @returns {Promise<Object|null>} Pedido o null si no existe\r\n   */\r\n  async obtenerPorId(id) {\r\n    try {\r\n      // Obtener datos del pedido\r\n      const [rows] = await pedidoPool.execute(\r\n        'SELECT * FROM pedidos WHERE id = ?',\r\n        [id]\r\n      );\r\n      \r\n      if (rows.length === 0) {\r\n        return null;\r\n      }\r\n      \r\n      const pedido = rows[0];\r\n      \r\n      // Obtener detalles del pedido\r\n      const detalles = await DetalleModel.obtenerPorPedidoId(id);\r\n      \r\n      // Obtener historial de estados\r\n      const [historial] = await pedidoPool.execute(\r\n        'SELECT * FROM historial_estados_pedido WHERE pedido_id = ? ORDER BY fecha_cambio',\r\n        [id]\r\n      );\r\n      \r\n      return {\r\n        ...pedido,\r\n        detalles,\r\n        historial\r\n      };\r\n    } catch (error) {\r\n      logger.error(`Error al obtener pedido por ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Obtiene un pedido por su número\r\n   * @param {string} numeroPedido - Número de pedido\r\n   * @returns {Promise<Object|null>} Pedido o null si no existe\r\n   */\r\n  async obtenerPorNumero(numeroPedido) {\r\n    try {\r\n      // Obtener datos del pedido\r\n      const [rows] = await pedidoPool.execute(\r\n        'SELECT * FROM pedidos WHERE numero_pedido = ?',\r\n        [numeroPedido]\r\n      );\r\n      \r\n      if (rows.length === 0) {\r\n        return null;\r\n      }\r\n      \r\n      const pedidoId = rows[0].id;\r\n      return this.obtenerPorId(pedidoId);\r\n    } catch (error) {\r\n      logger.error(`Error al obtener pedido por número ${numeroPedido}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Actualiza el estado de un pedido\r\n   * @param {number} id - ID del pedido\r\n   * @param {string} nuevoEstado - Nuevo estado\r\n   * @param {string} comentario - Comentario sobre el cambio\r\n   * @returns {Promise<boolean>} true si se actualizó correctamente\r\n   */\r\n  async actualizarEstado(id, nuevoEstado, comentario = '') {\r\n    const connection = await pedidoPool.getConnection();\r\n    try {\r\n      await connection.beginTransaction();\r\n      \r\n      // Obtener estado actual\r\n      const [rows] = await connection.execute(\r\n        'SELECT estado FROM pedidos WHERE id = ?',\r\n        [id]\r\n      );\r\n      \r\n      if (rows.length === 0) {\r\n        throw new Error(`Pedido con ID ${id} no encontrado`);\r\n      }\r\n      \r\n      const estadoAnterior = rows[0].estado;\r\n      \r\n      // No actualizar si el estado es el mismo\r\n      if (estadoAnterior === nuevoEstado) {\r\n        await connection.rollback();\r\n        return false;\r\n      }\r\n      \r\n      // Actualizar estado del pedido\r\n      await connection.execute(\r\n        'UPDATE pedidos SET estado = ? WHERE id = ?',\r\n        [nuevoEstado, id]\r\n      );\r\n      \r\n      // Actualizar campo de fecha correspondiente al nuevo estado\r\n      let campoFecha = null;\r\n      switch (nuevoEstado) {\r\n        case 'pagado':\r\n          campoFecha = 'fecha_pago';\r\n          break;\r\n        case 'preparando':\r\n          campoFecha = 'fecha_preparacion';\r\n          break;\r\n        case 'enviado':\r\n          campoFecha = 'fecha_envio';\r\n          break;\r\n        case 'entregado':\r\n          campoFecha = 'fecha_entrega';\r\n          break;\r\n      }\r\n      \r\n      if (campoFecha) {\r\n        await connection.execute(\r\n          `UPDATE pedidos SET ${campoFecha} = CURRENT_TIMESTAMP WHERE id = ?`,\r\n          [id]\r\n        );\r\n      }\r\n      \r\n      // Registrar en historial\r\n      await connection.execute(\r\n        `INSERT INTO historial_estados_pedido (\r\n          pedido_id, estado_anterior, estado_nuevo, comentario\r\n        ) VALUES (?, ?, ?, ?)`,\r\n        [id, estadoAnterior, nuevoEstado, comentario]\r\n      );\r\n      \r\n      await connection.commit();\r\n      return true;\r\n    } catch (error) {\r\n      await connection.rollback();\r\n      logger.error(`Error al actualizar estado del pedido ${id}:`, error);\r\n      throw error;\r\n    } finally {\r\n      connection.release();\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Obtiene pedidos por usuario\r\n   * @param {number} usuarioId - ID del usuario\r\n   * @returns {Promise<Array>} Lista de pedidos\r\n   */\r\n  async obtenerPorUsuario(usuarioId) {\r\n    try {\r\n      const [rows] = await pedidoPool.execute(\r\n        'SELECT * FROM pedidos WHERE usuario_id = ? ORDER BY fecha_pedido DESC',\r\n        [usuarioId]\r\n      );\r\n      \r\n      // Para cada pedido, obtener sus detalles\r\n      const pedidosCompletos = [];\r\n      for (const pedido of rows) {\r\n        const detalles = await DetalleModel.obtenerPorPedidoId(pedido.id);\r\n        pedidosCompletos.push({\r\n          ...pedido,\r\n          detalles\r\n        });\r\n      }\r\n      \r\n      return pedidosCompletos;\r\n    } catch (error) {\r\n      logger.error(`Error al obtener pedidos del usuario ${usuarioId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Obtiene pedidos por estado\r\n   * @param {string} estado - Estado de los pedidos a buscar\r\n   * @returns {Promise<Array>} Lista de pedidos\r\n   */\r\n  async obtenerPorEstado(estado) {\r\n    try {\r\n      const [rows] = await pedidoPool.execute(\r\n        'SELECT * FROM pedidos WHERE estado = ? ORDER BY fecha_pedido DESC',\r\n        [estado]\r\n      );\r\n      \r\n      // Para cada pedido, obtener sus detalles\r\n      const pedidosCompletos = [];\r\n      for (const pedido of rows) {\r\n        const detalles = await DetalleModel.obtenerPorPedidoId(pedido.id);\r\n        pedidosCompletos.push({\r\n          ...pedido,\r\n          detalles\r\n        });\r\n      }\r\n      \r\n      return pedidosCompletos;\r\n    } catch (error) {\r\n      logger.error(`Error al obtener pedidos con estado ${estado}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Calcula el total de un pedido\r\n   * @param {Object} datosPedido - Datos del pedido\r\n   * @returns {Object} Totales calculados\r\n   */\r\n  calcularTotales(datosPedido) {\r\n    try {\r\n      // Calcular subtotal a partir de los detalles\r\n      const { subtotal } = DetalleModel.calcularTotales(datosPedido.detalles);\r\n      \r\n      // Calcular el total final\r\n      const costoEnvio = parseFloat(datosPedido.costo_envio || 0);\r\n      const descuento = parseFloat(datosPedido.descuento || 0);\r\n      const impuestos = parseFloat(datosPedido.impuestos || 0);\r\n      \r\n      const totalFinal = subtotal + costoEnvio - descuento + impuestos;\r\n      \r\n      return {\r\n        subtotal,\r\n        costo_envio: costoEnvio,\r\n        descuento,\r\n        impuestos,\r\n        total_final: totalFinal\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error al calcular totales del pedido:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n};\r\n\r\nmodule.exports = PedidoModel;"
  },
  "package-lock.json": "{\r\n  \"name\": \"ws-pedido\",\r\n  \"version\": \"1.0.0\",\r\n  \"lockfileVersion\": 3,\r\n  \"requires\": true,\r\n  \"packages\": {\r\n    \"\": {\r\n      \"name\": \"ws-pedido\",\r\n      \"version\": \"1.0.0\",\r\n      \"license\": \"ISC\",\r\n      \"dependencies\": {\r\n        \"body-parser\": \"^1.20.2\",\r\n        \"dotenv\": \"^16.3.1\",\r\n        \"express\": \"^4.18.2\",\r\n        \"mysql2\": \"^3.6.1\",\r\n        \"soap\": \"^0.45.0\",\r\n        \"winston\": \"^3.10.0\",\r\n        \"xml2js\": \"^0.6.2\"\r\n      },\r\n      \"devDependencies\": {\r\n        \"nodemon\": \"^3.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/@colors/colors\": {\r\n      \"version\": \"1.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/@colors/colors/-/colors-1.6.0.tgz\",\r\n      \"integrity\": \"sha512-Ir+AOibqzrIsL6ajt3Rz3LskB7OiMVHqltZmspbW/TJuTVuyOMirVqAkjfY6JISiLHgyNqicAC8AyHHGzNd/dA==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=0.1.90\"\r\n      }\r\n    },\r\n    \"node_modules/@dabh/diagnostics\": {\r\n      \"version\": \"2.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/@dabh/diagnostics/-/diagnostics-2.0.3.tgz\",\r\n      \"integrity\": \"sha512-hrlQOIi7hAfzsMqlGSFyVucrx38O+j6wiGOf//H2ecvIEqYN4ADBSS2iLMh5UFyDunCNniUIPk/q3riFv45xRA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"colorspace\": \"1.1.x\",\r\n        \"enabled\": \"2.0.x\",\r\n        \"kuler\": \"^2.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/@noble/hashes\": {\r\n      \"version\": \"1.8.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/@noble/hashes/-/hashes-1.8.0.tgz\",\r\n      \"integrity\": \"sha512-jCs9ldd7NwzpgXDIf6P3+NrHh9/sD6CQdxHyjQI+h/6rDNo88ypBxxz45UDuZHz9r3tNz7N/VInSVoVdtXEI4A==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \"^14.21.3 || >=16\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://paulmillr.com/funding/\"\r\n      }\r\n    },\r\n    \"node_modules/@paralleldrive/cuid2\": {\r\n      \"version\": \"2.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/@paralleldrive/cuid2/-/cuid2-2.2.2.tgz\",\r\n      \"integrity\": \"sha512-ZOBkgDwEdoYVlSeRbYYXs0S9MejQofiVYoTbKzy/6GQa39/q5tQU2IX46+shYnUkpEl3wc+J6wRlar7r2EK2xA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"@noble/hashes\": \"^1.1.5\"\r\n      }\r\n    },\r\n    \"node_modules/@types/triple-beam\": {\r\n      \"version\": \"1.3.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/@types/triple-beam/-/triple-beam-1.3.5.tgz\",\r\n      \"integrity\": \"sha512-6WaYesThRMCl19iryMYP7/x2OVgCtbIVflDGFpWnb9irXI3UjYE4AzmYuiUKY1AJstGijoY+MgUszMgRxIYTYw==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/@xmldom/xmldom\": {\r\n      \"version\": \"0.7.13\",\r\n      \"resolved\": \"https://registry.npmjs.org/@xmldom/xmldom/-/xmldom-0.7.13.tgz\",\r\n      \"integrity\": \"sha512-lm2GW5PkosIzccsaZIz7tp8cPADSIlIHWDFTR1N0SzfinhhYgeIQjFMz4rYzanCScr3DqQLeomUDArp6MWKm+g==\",\r\n      \"deprecated\": \"this version is no longer supported, please update to at least 0.8.*\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=10.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/accepts\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"mime-types\": \"~2.1.34\",\r\n        \"negotiator\": \"0.6.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/anymatch\": {\r\n      \"version\": \"3.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\r\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\r\n      \"dev\": true,\r\n      \"license\": \"ISC\",\r\n      \"dependencies\": {\r\n        \"normalize-path\": \"^3.0.0\",\r\n        \"picomatch\": \"^2.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8\"\r\n      }\r\n    },\r\n    \"node_modules/array-flatten\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/asap\": {\r\n      \"version\": \"2.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/asap/-/asap-2.0.6.tgz\",\r\n      \"integrity\": \"sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/async\": {\r\n      \"version\": \"3.2.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.6.tgz\",\r\n      \"integrity\": \"sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/asynckit\": {\r\n      \"version\": \"0.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\r\n      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/aws-ssl-profiles\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/aws-ssl-profiles/-/aws-ssl-profiles-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-NZKeq9AfyQvEeNlN0zSYAaWrmBffJh3IELMZfRpJVWgrpEbtEpnjvzqBPf+mxoI287JohRDoa+/nsfqqiZmF6g==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 6.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/axios\": {\r\n      \"version\": \"1.9.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.9.0.tgz\",\r\n      \"integrity\": \"sha512-re4CqKTJaURpzbLHtIi6XpDv20/CnpXOtjRY5/CU32L8gU8ek9UIivcfvSWvmKEngmVbrUtPpdDwWDWL7DNHvg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"follow-redirects\": \"^1.15.6\",\r\n        \"form-data\": \"^4.0.0\",\r\n        \"proxy-from-env\": \"^1.1.0\"\r\n      }\r\n    },\r\n    \"node_modules/axios-ntlm\": {\r\n      \"version\": \"1.4.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/axios-ntlm/-/axios-ntlm-1.4.4.tgz\",\r\n      \"integrity\": \"sha512-kpCRdzMfL8gi0Z0o96P3QPAK4XuC8iciGgxGXe+PeQ4oyjI2LZN8WSOKbu0Y9Jo3T/A7pB81n6jYVPIpglEuRA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"axios\": \"^1.8.4\",\r\n        \"des.js\": \"^1.1.0\",\r\n        \"dev-null\": \"^0.1.1\",\r\n        \"js-md4\": \"^0.3.2\"\r\n      }\r\n    },\r\n    \"node_modules/balanced-match\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/binary-extensions\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\r\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser\": {\r\n      \"version\": \"1.20.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz\",\r\n      \"integrity\": \"sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"content-type\": \"~1.0.5\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"qs\": \"6.13.0\",\r\n        \"raw-body\": \"2.5.2\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/brace-expansion\": {\r\n      \"version\": \"1.1.11\",\r\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\r\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"balanced-match\": \"^1.0.0\",\r\n        \"concat-map\": \"0.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/braces\": {\r\n      \"version\": \"3.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\r\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"fill-range\": \"^7.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/bytes\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/call-bind-apply-helpers\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/call-bound\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"call-bind-apply-helpers\": \"^1.0.2\",\r\n        \"get-intrinsic\": \"^1.3.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/chokidar\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"anymatch\": \"~3.1.2\",\r\n        \"braces\": \"~3.0.2\",\r\n        \"glob-parent\": \"~5.1.2\",\r\n        \"is-binary-path\": \"~2.1.0\",\r\n        \"is-glob\": \"~4.0.1\",\r\n        \"normalize-path\": \"~3.0.0\",\r\n        \"readdirp\": \"~3.6.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8.10.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://paulmillr.com/funding/\"\r\n      },\r\n      \"optionalDependencies\": {\r\n        \"fsevents\": \"~2.3.2\"\r\n      }\r\n    },\r\n    \"node_modules/color\": {\r\n      \"version\": \"3.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/color/-/color-3.2.1.tgz\",\r\n      \"integrity\": \"sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"color-convert\": \"^1.9.3\",\r\n        \"color-string\": \"^1.6.0\"\r\n      }\r\n    },\r\n    \"node_modules/color-convert\": {\r\n      \"version\": \"1.9.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\",\r\n      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"color-name\": \"1.1.3\"\r\n      }\r\n    },\r\n    \"node_modules/color-name\": {\r\n      \"version\": \"1.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\",\r\n      \"integrity\": \"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/color-string\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/color-string/-/color-string-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"color-name\": \"^1.0.0\",\r\n        \"simple-swizzle\": \"^0.2.2\"\r\n      }\r\n    },\r\n    \"node_modules/colorspace\": {\r\n      \"version\": \"1.1.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/colorspace/-/colorspace-1.1.4.tgz\",\r\n      \"integrity\": \"sha512-BgvKJiuVu1igBUF2kEjRCZXol6wiiGbY5ipL/oVPwm0BL9sIpMIzM8IK7vwuxIIzOXMV3Ey5w+vxhm0rR/TN8w==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"color\": \"^3.1.3\",\r\n        \"text-hex\": \"1.0.x\"\r\n      }\r\n    },\r\n    \"node_modules/combined-stream\": {\r\n      \"version\": \"1.0.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\r\n      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"delayed-stream\": \"~1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/concat-map\": {\r\n      \"version\": \"0.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\r\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/content-disposition\": {\r\n      \"version\": \"0.5.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\r\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"5.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/content-type\": {\r\n      \"version\": \"1.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\r\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie\": {\r\n      \"version\": \"0.7.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz\",\r\n      \"integrity\": \"sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-signature\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\r\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/debug\": {\r\n      \"version\": \"2.6.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\r\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"ms\": \"2.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/delayed-stream\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/denque\": {\r\n      \"version\": \"2.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/denque/-/denque-2.1.0.tgz\",\r\n      \"integrity\": \"sha512-HVQE3AAb/pxF8fQAoiqpvg9i3evqug3hoiwakOyZAwJm+6vZehbkYXZ0l4JxS+I3QxM97v5aaRNhj8v5oBhekw==\",\r\n      \"license\": \"Apache-2.0\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10\"\r\n      }\r\n    },\r\n    \"node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/des.js\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/des.js/-/des.js-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-r17GxjhUCjSRy8aiJpr8/UadFIzMzJGexI3Nmz4ADi9LYSFx4gTBp80+NaX/YsXWWLhpZ7v/v/ubEc/bCNfKwg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"inherits\": \"^2.0.1\",\r\n        \"minimalistic-assert\": \"^1.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/destroy\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/dev-null\": {\r\n      \"version\": \"0.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/dev-null/-/dev-null-0.1.1.tgz\",\r\n      \"integrity\": \"sha512-nMNZG0zfMgmdv8S5O0TM5cpwNbGKRGPCxVsr0SmA3NZZy9CYBbuNLL0PD3Acx9e5LIUgwONXtM9kM6RlawPxEQ==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/dezalgo\": {\r\n      \"version\": \"1.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/dezalgo/-/dezalgo-1.0.4.tgz\",\r\n      \"integrity\": \"sha512-rXSP0bf+5n0Qonsb+SVVfNfIsimO4HEtmnIpPHY8Q1UCzKlQrDMfdobr8nJOOsRgWCyMRqeSBQzmWUMq7zvVig==\",\r\n      \"license\": \"ISC\",\r\n      \"dependencies\": {\r\n        \"asap\": \"^2.0.0\",\r\n        \"wrappy\": \"1\"\r\n      }\r\n    },\r\n    \"node_modules/dotenv\": {\r\n      \"version\": \"16.5.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgz\",\r\n      \"integrity\": \"sha512-m/C+AwOAr9/W1UOIZUo232ejMNnJAJtYQjUbHoNTBNTJSvqzzDh7vnrei3o3r3m9blf6ZoDkvcw0VmozNRFJxg==\",\r\n      \"license\": \"BSD-2-Clause\",\r\n      \"engines\": {\r\n        \"node\": \">=12\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://dotenvx.com\"\r\n      }\r\n    },\r\n    \"node_modules/dunder-proto\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"call-bind-apply-helpers\": \"^1.0.1\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"gopd\": \"^1.2.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/ee-first\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/enabled\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/enabled/-/enabled-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-AKrN98kuwOzMIdAizXGI86UFBoo26CL21UM763y1h/GMSJ4/OHU9k2YlsmBpyScFo/wbLzWQJBMCW4+IO3/+OQ==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/encodeurl\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/es-define-property\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/es-errors\": {\r\n      \"version\": \"1.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\r\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/es-object-atoms\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/es-set-tostringtag\": {\r\n      \"version\": \"2.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz\",\r\n      \"integrity\": \"sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"get-intrinsic\": \"^1.2.6\",\r\n        \"has-tostringtag\": \"^1.0.2\",\r\n        \"hasown\": \"^2.0.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/escape-html\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/etag\": {\r\n      \"version\": \"1.8.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\r\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express\": {\r\n      \"version\": \"4.21.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.21.2.tgz\",\r\n      \"integrity\": \"sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"accepts\": \"~1.3.8\",\r\n        \"array-flatten\": \"1.1.1\",\r\n        \"body-parser\": \"1.20.3\",\r\n        \"content-disposition\": \"0.5.4\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"cookie\": \"0.7.1\",\r\n        \"cookie-signature\": \"1.0.6\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"encodeurl\": \"~2.0.0\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"finalhandler\": \"1.3.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"merge-descriptors\": \"1.0.3\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"path-to-regexp\": \"0.1.12\",\r\n        \"proxy-addr\": \"~2.0.7\",\r\n        \"qs\": \"6.13.0\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"safe-buffer\": \"5.2.1\",\r\n        \"send\": \"0.19.0\",\r\n        \"serve-static\": \"1.16.2\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"utils-merge\": \"1.0.1\",\r\n        \"vary\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10.0\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"opencollective\",\r\n        \"url\": \"https://opencollective.com/express\"\r\n      }\r\n    },\r\n    \"node_modules/fecha\": {\r\n      \"version\": \"4.2.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/fecha/-/fecha-4.2.3.tgz\",\r\n      \"integrity\": \"sha512-OP2IUU6HeYKJi3i0z4A19kHMQoLVs4Hc+DPqqxI2h/DPZHTm/vjsfC6P0b4jCMy14XizLBqvndQ+UilD7707Jw==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/fill-range\": {\r\n      \"version\": \"7.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\r\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"to-regex-range\": \"^5.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/finalhandler\": {\r\n      \"version\": \"1.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz\",\r\n      \"integrity\": \"sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"encodeurl\": \"~2.0.0\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"unpipe\": \"~1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/fn.name\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/fn.name/-/fn.name-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-GRnmB5gPyJpAhTQdSZTSp9uaPSvl09KoYcMQtsB9rQoOmzs9dH6ffeccH+Z+cv6P68Hu5bC6JjRh4Ah/mHSNRw==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/follow-redirects\": {\r\n      \"version\": \"1.15.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz\",\r\n      \"integrity\": \"sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==\",\r\n      \"funding\": [\r\n        {\r\n          \"type\": \"individual\",\r\n          \"url\": \"https://github.com/sponsors/RubenVerborgh\"\r\n        }\r\n      ],\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=4.0\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"debug\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/form-data\": {\r\n      \"version\": \"4.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.2.tgz\",\r\n      \"integrity\": \"sha512-hGfm/slu0ZabnNt4oaRZ6uREyfCj6P4fT/n6A1rGV+Z0VdGXjfOhVUpkn6qVQONHGIFwmveGXyDs75+nr6FM8w==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"asynckit\": \"^0.4.0\",\r\n        \"combined-stream\": \"^1.0.8\",\r\n        \"es-set-tostringtag\": \"^2.1.0\",\r\n        \"mime-types\": \"^2.1.12\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/formidable\": {\r\n      \"version\": \"2.1.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/formidable/-/formidable-2.1.5.tgz\",\r\n      \"integrity\": \"sha512-Oz5Hwvwak/DCaXVVUtPn4oLMLLy1CdclLKO1LFgU7XzDpVMUU5UjlSLpGMocyQNNk8F6IJW9M/YdooSn2MRI+Q==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"@paralleldrive/cuid2\": \"^2.2.2\",\r\n        \"dezalgo\": \"^1.0.4\",\r\n        \"once\": \"^1.4.0\",\r\n        \"qs\": \"^6.11.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://ko-fi.com/tunnckoCore/commissions\"\r\n      }\r\n    },\r\n    \"node_modules/forwarded\": {\r\n      \"version\": \"0.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\r\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fresh\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\r\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fsevents\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\r\n      \"dev\": true,\r\n      \"hasInstallScript\": true,\r\n      \"license\": \"MIT\",\r\n      \"optional\": true,\r\n      \"os\": [\r\n        \"darwin\"\r\n      ],\r\n      \"engines\": {\r\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/function-bind\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\r\n      \"license\": \"MIT\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/generate-function\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/generate-function/-/generate-function-2.3.1.tgz\",\r\n      \"integrity\": \"sha512-eeB5GfMNeevm/GRYq20ShmsaGcmI81kIX2K9XQx5miC8KdHaC6Jm0qQ8ZNeGOi7wYB8OsdxKs+Y2oVuTFuVwKQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"is-property\": \"^1.0.2\"\r\n      }\r\n    },\r\n    \"node_modules/get-intrinsic\": {\r\n      \"version\": \"1.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\r\n      \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"call-bind-apply-helpers\": \"^1.0.2\",\r\n        \"es-define-property\": \"^1.0.1\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"es-object-atoms\": \"^1.1.1\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"get-proto\": \"^1.0.1\",\r\n        \"gopd\": \"^1.2.0\",\r\n        \"has-symbols\": \"^1.1.0\",\r\n        \"hasown\": \"^2.0.2\",\r\n        \"math-intrinsics\": \"^1.1.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/get-proto\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"dunder-proto\": \"^1.0.1\",\r\n        \"es-object-atoms\": \"^1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/get-stream\": {\r\n      \"version\": \"6.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\r\n      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n      }\r\n    },\r\n    \"node_modules/glob-parent\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\r\n      \"dev\": true,\r\n      \"license\": \"ISC\",\r\n      \"dependencies\": {\r\n        \"is-glob\": \"^4.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/gopd\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-flag\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/has-symbols\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-tostringtag\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"has-symbols\": \"^1.0.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/hasown\": {\r\n      \"version\": \"2.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\r\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.24\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\r\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/ignore-by-default\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\",\r\n      \"dev\": true,\r\n      \"license\": \"ISC\"\r\n    },\r\n    \"node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\r\n      \"license\": \"ISC\"\r\n    },\r\n    \"node_modules/ipaddr.js\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/is-arrayish\": {\r\n      \"version\": \"0.3.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz\",\r\n      \"integrity\": \"sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/is-binary-path\": {\r\n      \"version\": \"2.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\r\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"binary-extensions\": \"^2.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/is-extglob\": {\r\n      \"version\": \"2.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\r\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-glob\": {\r\n      \"version\": \"4.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\r\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"is-extglob\": \"^2.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-number\": {\r\n      \"version\": \"7.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\r\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=0.12.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-property\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-Ks/IoX00TtClbGQr4TWXemAnktAQvYB7HzcCxDGqEZU6oCmb2INHuOoKxbtR+HFkmYWBKv/dOZtGRiAjDhj92g==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/is-stream\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n      }\r\n    },\r\n    \"node_modules/js-md4\": {\r\n      \"version\": \"0.3.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/js-md4/-/js-md4-0.3.2.tgz\",\r\n      \"integrity\": \"sha512-/GDnfQYsltsjRswQhN9fhv3EMw2sCpUdrdxyWDOUK7eyD++r3gRhzgiQgc/x4MAv2i1iuQ4lxO5mvqM3vj4bwA==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/kuler\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/kuler/-/kuler-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-Xq9nH7KlWZmXAtodXDDRE7vs6DU1gTU8zYDHDiWLSip45Egwq3plLHzPn27NgvzL2r1LMPC1vdqh98sQxtqj4A==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/lodash\": {\r\n      \"version\": \"4.17.21\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\r\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/logform\": {\r\n      \"version\": \"2.7.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/logform/-/logform-2.7.0.tgz\",\r\n      \"integrity\": \"sha512-TFYA4jnP7PVbmlBIfhlSe+WKxs9dklXMTEGcBCIvLhE/Tn3H6Gk1norupVW7m5Cnd4bLcr08AytbyV/xj7f/kQ==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"@colors/colors\": \"1.6.0\",\r\n        \"@types/triple-beam\": \"^1.3.2\",\r\n        \"fecha\": \"^4.2.0\",\r\n        \"ms\": \"^2.1.1\",\r\n        \"safe-stable-stringify\": \"^2.3.1\",\r\n        \"triple-beam\": \"^1.3.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 12.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/logform/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/long\": {\r\n      \"version\": \"5.3.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/long/-/long-5.3.2.tgz\",\r\n      \"integrity\": \"sha512-mNAgZ1GmyNhD7AuqnTG3/VQ26o760+ZYBPKjPvugO8+nLbYfX6TVpJPseBvopbdY+qpZ/lKUnmEc1LeZYS3QAA==\",\r\n      \"license\": \"Apache-2.0\"\r\n    },\r\n    \"node_modules/lru-cache\": {\r\n      \"version\": \"7.18.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-7.18.3.tgz\",\r\n      \"integrity\": \"sha512-jumlc0BIUrS3qJGgIkWZsyfAM7NCWiBcCDhnd+3NNM5KbBmLTgHVfWBcg6W+rLUsIpzpERPsvwUP7CckAQSOoA==\",\r\n      \"license\": \"ISC\",\r\n      \"engines\": {\r\n        \"node\": \">=12\"\r\n      }\r\n    },\r\n    \"node_modules/lru.min\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/lru.min/-/lru.min-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-Nv9KddBcQSlQopmBHXSsZVY5xsdlZkdH/Iey0BlcBYggMd4two7cZnKOK9vmy3nY0O5RGH99z1PCeTpPqszUYg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"bun\": \">=1.0.0\",\r\n        \"deno\": \">=1.30.0\",\r\n        \"node\": \">=8.0.0\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"github\",\r\n        \"url\": \"https://github.com/sponsors/wellwelwel\"\r\n      }\r\n    },\r\n    \"node_modules/math-intrinsics\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/media-typer\": {\r\n      \"version\": \"0.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\r\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/merge-descriptors\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==\",\r\n      \"license\": \"MIT\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n      }\r\n    },\r\n    \"node_modules/methods\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime\": {\r\n      \"version\": \"1.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\r\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\r\n      \"license\": \"MIT\",\r\n      \"bin\": {\r\n        \"mime\": \"cli.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/mime-db\": {\r\n      \"version\": \"1.52.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\r\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime-types\": {\r\n      \"version\": \"2.1.35\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\r\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"mime-db\": \"1.52.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/minimalistic-assert\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\",\r\n      \"license\": \"ISC\"\r\n    },\r\n    \"node_modules/minimatch\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\r\n      \"dev\": true,\r\n      \"license\": \"ISC\",\r\n      \"dependencies\": {\r\n        \"brace-expansion\": \"^1.1.7\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/ms\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/mysql2\": {\r\n      \"version\": \"3.14.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mysql2/-/mysql2-3.14.1.tgz\",\r\n      \"integrity\": \"sha512-7ytuPQJjQB8TNAYX/H2yhL+iQOnIBjAMam361R7UAL0lOVXWjtdrmoL9HYKqKoLp/8UUTRcvo1QPvK9KL7wA8w==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"aws-ssl-profiles\": \"^1.1.1\",\r\n        \"denque\": \"^2.1.0\",\r\n        \"generate-function\": \"^2.3.1\",\r\n        \"iconv-lite\": \"^0.6.3\",\r\n        \"long\": \"^5.2.1\",\r\n        \"lru.min\": \"^1.0.0\",\r\n        \"named-placeholders\": \"^1.1.3\",\r\n        \"seq-queue\": \"^0.0.5\",\r\n        \"sqlstring\": \"^2.3.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8.0\"\r\n      }\r\n    },\r\n    \"node_modules/mysql2/node_modules/iconv-lite\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/named-placeholders\": {\r\n      \"version\": \"1.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/named-placeholders/-/named-placeholders-1.1.3.tgz\",\r\n      \"integrity\": \"sha512-eLoBxg6wE/rZkJPhU/xRX1WTpkFEwDJEN96oxFrTsqBdbT5ec295Q+CoHrL9IT0DipqKhmGcaZmwOt8OON5x1w==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"lru-cache\": \"^7.14.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=12.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/negotiator\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon\": {\r\n      \"version\": \"3.1.10\",\r\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-3.1.10.tgz\",\r\n      \"integrity\": \"sha512-WDjw3pJ0/0jMFmyNDp3gvY2YizjLmmOUQo6DEBY+JgdvW/yQ9mEeSw6H5ythl5Ny2ytb7f9C2nIbjSxMNzbJXw==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"chokidar\": \"^3.5.2\",\r\n        \"debug\": \"^4\",\r\n        \"ignore-by-default\": \"^1.0.1\",\r\n        \"minimatch\": \"^3.1.2\",\r\n        \"pstree.remy\": \"^1.1.8\",\r\n        \"semver\": \"^7.5.3\",\r\n        \"simple-update-notifier\": \"^2.0.0\",\r\n        \"supports-color\": \"^5.5.0\",\r\n        \"touch\": \"^3.1.0\",\r\n        \"undefsafe\": \"^2.0.5\"\r\n      },\r\n      \"bin\": {\r\n        \"nodemon\": \"bin/nodemon.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"opencollective\",\r\n        \"url\": \"https://opencollective.com/nodemon\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/debug\": {\r\n      \"version\": \"4.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.0.tgz\",\r\n      \"integrity\": \"sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"ms\": \"^2.1.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=6.0\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"supports-color\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/normalize-path\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/object-inspect\": {\r\n      \"version\": \"1.13.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\r\n      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/on-finished\": {\r\n      \"version\": \"2.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\r\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/once\": {\r\n      \"version\": \"1.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\r\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\r\n      \"license\": \"ISC\",\r\n      \"dependencies\": {\r\n        \"wrappy\": \"1\"\r\n      }\r\n    },\r\n    \"node_modules/one-time\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/one-time/-/one-time-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-5DXOiRKwuSEcQ/l0kGCF6Q3jcADFv5tSmRaJck/OqkVFcOzutB134KRSfF0xDrL39MNnqxbHBbUUcjZIhTgb2g==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"fn.name\": \"1.x.x\"\r\n      }\r\n    },\r\n    \"node_modules/parseurl\": {\r\n      \"version\": \"1.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\r\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/path-to-regexp\": {\r\n      \"version\": \"0.1.12\",\r\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz\",\r\n      \"integrity\": \"sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/picomatch\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\r\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=8.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\r\n      }\r\n    },\r\n    \"node_modules/proxy-addr\": {\r\n      \"version\": \"2.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\r\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"forwarded\": \"0.2.0\",\r\n        \"ipaddr.js\": \"1.9.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/proxy-from-env\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/pstree.remy\": {\r\n      \"version\": \"1.1.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\r\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/qs\": {\r\n      \"version\": \"6.13.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.13.0.tgz\",\r\n      \"integrity\": \"sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==\",\r\n      \"license\": \"BSD-3-Clause\",\r\n      \"dependencies\": {\r\n        \"side-channel\": \"^1.0.6\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/range-parser\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body\": {\r\n      \"version\": \"2.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\r\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/readable-stream\": {\r\n      \"version\": \"3.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz\",\r\n      \"integrity\": \"sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"inherits\": \"^2.0.3\",\r\n        \"string_decoder\": \"^1.1.1\",\r\n        \"util-deprecate\": \"^1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/readdirp\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"picomatch\": \"^2.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/safe-buffer\": {\r\n      \"version\": \"5.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\r\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\r\n      \"funding\": [\r\n        {\r\n          \"type\": \"github\",\r\n          \"url\": \"https://github.com/sponsors/feross\"\r\n        },\r\n        {\r\n          \"type\": \"patreon\",\r\n          \"url\": \"https://www.patreon.com/feross\"\r\n        },\r\n        {\r\n          \"type\": \"consulting\",\r\n          \"url\": \"https://feross.org/support\"\r\n        }\r\n      ],\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/safe-stable-stringify\": {\r\n      \"version\": \"2.5.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz\",\r\n      \"integrity\": \"sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/safer-buffer\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/sax\": {\r\n      \"version\": \"1.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/sax/-/sax-1.4.1.tgz\",\r\n      \"integrity\": \"sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg==\",\r\n      \"license\": \"ISC\"\r\n    },\r\n    \"node_modules/semver\": {\r\n      \"version\": \"7.7.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\r\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\r\n      \"dev\": true,\r\n      \"license\": \"ISC\",\r\n      \"bin\": {\r\n        \"semver\": \"bin/semver.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/send\": {\r\n      \"version\": \"0.19.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.19.0.tgz\",\r\n      \"integrity\": \"sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"mime\": \"1.6.0\",\r\n        \"ms\": \"2.1.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"statuses\": \"2.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/send/node_modules/encodeurl\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/send/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/seq-queue\": {\r\n      \"version\": \"0.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/seq-queue/-/seq-queue-0.0.5.tgz\",\r\n      \"integrity\": \"sha512-hr3Wtp/GZIc/6DAGPDcV4/9WoZhjrkXsi5B/07QgX8tsdc6ilr7BFM6PM6rbdAX1kFSDYeZGLipIZZKyQP0O5Q==\"\r\n    },\r\n    \"node_modules/serve-static\": {\r\n      \"version\": \"1.16.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz\",\r\n      \"integrity\": \"sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"encodeurl\": \"~2.0.0\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"send\": \"0.19.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\",\r\n      \"license\": \"ISC\"\r\n    },\r\n    \"node_modules/side-channel\": {\r\n      \"version\": \"1.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\r\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"object-inspect\": \"^1.13.3\",\r\n        \"side-channel-list\": \"^1.0.0\",\r\n        \"side-channel-map\": \"^1.0.1\",\r\n        \"side-channel-weakmap\": \"^1.0.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/side-channel-list\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"object-inspect\": \"^1.13.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/side-channel-map\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"call-bound\": \"^1.0.2\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"get-intrinsic\": \"^1.2.5\",\r\n        \"object-inspect\": \"^1.13.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/side-channel-weakmap\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"call-bound\": \"^1.0.2\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"get-intrinsic\": \"^1.2.5\",\r\n        \"object-inspect\": \"^1.13.3\",\r\n        \"side-channel-map\": \"^1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/simple-swizzle\": {\r\n      \"version\": \"0.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz\",\r\n      \"integrity\": \"sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"is-arrayish\": \"^0.3.1\"\r\n      }\r\n    },\r\n    \"node_modules/simple-update-notifier\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"semver\": \"^7.5.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/soap\": {\r\n      \"version\": \"0.45.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/soap/-/soap-0.45.0.tgz\",\r\n      \"integrity\": \"sha512-t2wgZaWQCL8htPxpHzwW1Sw/Qy22Ls6my1X9ajMMXcmNYLlO4ogk10T0A+J8p4/6xHUQthfe2J3Ys1e9/sqS5w==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"axios-ntlm\": \"^1.2.0\",\r\n        \"debug\": \"^4.3.2\",\r\n        \"formidable\": \"^2.0.1\",\r\n        \"get-stream\": \"^6.0.1\",\r\n        \"lodash\": \"^4.17.21\",\r\n        \"sax\": \">=0.6\",\r\n        \"strip-bom\": \"^3.0.0\",\r\n        \"uuid\": \"^8.3.2\",\r\n        \"whatwg-mimetype\": \"3.0.0\",\r\n        \"xml-crypto\": \"^2.1.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=12.0.0\"\r\n      },\r\n      \"peerDependencies\": {\r\n        \"axios\": \">=0.21.1\"\r\n      }\r\n    },\r\n    \"node_modules/soap/node_modules/debug\": {\r\n      \"version\": \"4.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.0.tgz\",\r\n      \"integrity\": \"sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"ms\": \"^2.1.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=6.0\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"supports-color\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/soap/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/sqlstring\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-qC9iz2FlN7DQl3+wjwn3802RTyjCx7sDvfQEXchwa6CWOx07/WVfh91gBmQ9fahw8snwGEWU3xGzOt4tFyHLxg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/stack-trace\": {\r\n      \"version\": \"0.0.10\",\r\n      \"resolved\": \"https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz\",\r\n      \"integrity\": \"sha512-KGzahc7puUKkzyMt+IqAep+TVNbKP+k2Lmwhub39m1AsTSkaDutx56aDCo+HLDzf/D26BIHTJWNiTG1KAJiQCg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/string_decoder\": {\r\n      \"version\": \"1.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz\",\r\n      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"~5.2.0\"\r\n      }\r\n    },\r\n    \"node_modules/strip-bom\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/supports-color\": {\r\n      \"version\": \"5.5.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\r\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"has-flag\": \"^3.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/text-hex\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/text-hex/-/text-hex-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/to-regex-range\": {\r\n      \"version\": \"5.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\r\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"is-number\": \"^7.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.0\"\r\n      }\r\n    },\r\n    \"node_modules/toidentifier\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/touch\": {\r\n      \"version\": \"3.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.1.tgz\",\r\n      \"integrity\": \"sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==\",\r\n      \"dev\": true,\r\n      \"license\": \"ISC\",\r\n      \"bin\": {\r\n        \"nodetouch\": \"bin/nodetouch.js\"\r\n      }\r\n    },\r\n    \"node_modules/triple-beam\": {\r\n      \"version\": \"1.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/triple-beam/-/triple-beam-1.4.1.tgz\",\r\n      \"integrity\": \"sha512-aZbgViZrg1QNcG+LULa7nhZpJTZSLm/mXnHXnbAbjmN5aSa0y7V+wvv6+4WaBtpISJzThKy+PIPxc1Nq1EJ9mg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 14.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/type-is\": {\r\n      \"version\": \"1.6.18\",\r\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\r\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"media-typer\": \"0.3.0\",\r\n        \"mime-types\": \"~2.1.24\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/undefsafe\": {\r\n      \"version\": \"2.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\r\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\",\r\n      \"dev\": true,\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/unpipe\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/util-deprecate\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\r\n      \"license\": \"MIT\"\r\n    },\r\n    \"node_modules/utils-merge\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/uuid\": {\r\n      \"version\": \"8.3.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\r\n      \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\r\n      \"license\": \"MIT\",\r\n      \"bin\": {\r\n        \"uuid\": \"dist/bin/uuid\"\r\n      }\r\n    },\r\n    \"node_modules/vary\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/whatwg-mimetype\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-nt+N2dzIutVRxARx1nghPKGv1xHikU7HKdfafKkLNLindmPU/ch3U31NOCGGA/dmPcmb1VlofO0vnKAcsm0o/Q==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=12\"\r\n      }\r\n    },\r\n    \"node_modules/winston\": {\r\n      \"version\": \"3.17.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/winston/-/winston-3.17.0.tgz\",\r\n      \"integrity\": \"sha512-DLiFIXYC5fMPxaRg832S6F5mJYvePtmO5G9v9IgUFPhXm9/GkXarH/TUrBAVzhTCzAj9anE/+GjrgXp/54nOgw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"@colors/colors\": \"^1.6.0\",\r\n        \"@dabh/diagnostics\": \"^2.0.2\",\r\n        \"async\": \"^3.2.3\",\r\n        \"is-stream\": \"^2.0.0\",\r\n        \"logform\": \"^2.7.0\",\r\n        \"one-time\": \"^1.0.0\",\r\n        \"readable-stream\": \"^3.4.0\",\r\n        \"safe-stable-stringify\": \"^2.3.1\",\r\n        \"stack-trace\": \"0.0.x\",\r\n        \"triple-beam\": \"^1.3.0\",\r\n        \"winston-transport\": \"^4.9.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 12.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/winston-transport\": {\r\n      \"version\": \"4.9.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/winston-transport/-/winston-transport-4.9.0.tgz\",\r\n      \"integrity\": \"sha512-8drMJ4rkgaPo1Me4zD/3WLfI/zPdA9o2IipKODunnGDcuqbHwjsbB79ylv04LCGGzU0xQ6vTznOMpQGaLhhm6A==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"logform\": \"^2.7.0\",\r\n        \"readable-stream\": \"^3.6.2\",\r\n        \"triple-beam\": \"^1.3.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 12.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/wrappy\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\r\n      \"license\": \"ISC\"\r\n    },\r\n    \"node_modules/xml-crypto\": {\r\n      \"version\": \"2.1.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/xml-crypto/-/xml-crypto-2.1.6.tgz\",\r\n      \"integrity\": \"sha512-jjvpO8vHNV8QFhW5bMypP+k4BjBqHe/HrpIwpPcdUnUTIJakSIuN96o3Sdah4tKu2z64kM/JHEH8iEHGCc6Gyw==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"@xmldom/xmldom\": \"^0.7.9\",\r\n        \"xpath\": \"0.0.32\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/xml2js\": {\r\n      \"version\": \"0.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/xml2js/-/xml2js-0.6.2.tgz\",\r\n      \"integrity\": \"sha512-T4rieHaC1EXcES0Kxxj4JWgaUQHDk+qwHcYOCFHfiwKz7tOVPLq7Hjq9dM1WCMhylqMEfP7hMcOIChvotiZegA==\",\r\n      \"license\": \"MIT\",\r\n      \"dependencies\": {\r\n        \"sax\": \">=0.6.0\",\r\n        \"xmlbuilder\": \"~11.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/xmlbuilder\": {\r\n      \"version\": \"11.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz\",\r\n      \"integrity\": \"sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=4.0\"\r\n      }\r\n    },\r\n    \"node_modules/xpath\": {\r\n      \"version\": \"0.0.32\",\r\n      \"resolved\": \"https://registry.npmjs.org/xpath/-/xpath-0.0.32.tgz\",\r\n      \"integrity\": \"sha512-rxMJhSIoiO8vXcWvSifKqhvV96GjiD5wYb8/QHdoRyQvraTpp4IEv944nhGausZZ3u7dhQXteZuZbaqfpB7uYw==\",\r\n      \"license\": \"MIT\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6.0\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
  "package.json": "{\r\n  \"name\": \"ws-pedido\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Servicio SOAP para gestión de pedidos en FERREMAS\",\r\n  \"main\": \"server.js\",\r\n  \"scripts\": {\r\n    \"start\": \"node server.js\",\r\n    \"dev\": \"nodemon server.js\"\r\n  },\r\n  \"keywords\": [\r\n    \"soap\",\r\n    \"webservice\",\r\n    \"pedidos\",\r\n    \"ecommerce\"\r\n  ],\r\n  \"author\": \"FERREMAS\",\r\n  \"license\": \"ISC\",\r\n  \"dependencies\": {\r\n    \"body-parser\": \"^1.20.2\",\r\n    \"dotenv\": \"^16.3.1\",\r\n    \"express\": \"^4.18.2\",\r\n    \"mysql2\": \"^3.6.1\",\r\n    \"soap\": \"^0.45.0\",\r\n    \"winston\": \"^3.10.0\",\r\n    \"xml2js\": \"^0.6.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"nodemon\": \"^3.0.1\"\r\n  }\r\n}\r\n",
  "public": {
    "soap-tester.html": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Test SOAP Básico</title>\r\n    <style>\r\n        body { font-family: Arial; padding: 20px; max-width: 800px; margin: 0 auto; }\r\n        h1 { color: #2c3e50; }\r\n        button { padding: 10px 15px; background: #3498db; color: white; border: none; border-radius: 4px; cursor: pointer; margin: 10px 0; }\r\n        pre { background: #f8f9fa; padding: 15px; border-left: 3px solid #3498db; overflow: auto; max-height: 500px; }\r\n        .success { color: #27ae60; }\r\n        .error { color: #e74c3c; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <h1>Test SOAP - WS-Pedido</h1>\r\n    \r\n    <div>\r\n        <h2>Verificar WSDL</h2>\r\n        <button id=\"check-wsdl\">Obtener WSDL</button>\r\n        <div id=\"wsdl-result\"></div>\r\n    </div>\r\n    \r\n    <div>\r\n        <h2>Probar CrearPedido</h2>\r\n        <button id=\"crear-pedido\">Crear Pedido de Prueba</button>\r\n        <div id=\"crear-result\"></div>\r\n    </div>\r\n    \r\n    <script>\r\n        // Verificar WSDL\r\n        document.getElementById('check-wsdl').addEventListener('click', async () => {\r\n            const resultDiv = document.getElementById('wsdl-result');\r\n            resultDiv.innerHTML = \"Verificando WSDL...\";\r\n            \r\n            try {\r\n                const response = await fetch('/ws-pedido?wsdl');\r\n                const text = await response.text();\r\n                \r\n                if (response.ok && text.includes('wsdl:definitions')) {\r\n                    resultDiv.innerHTML = \"<p class='success'>✅ WSDL disponible correctamente</p>\";\r\n                    resultDiv.innerHTML += \"<pre>\" + text.substring(0, 300).replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") + \"...</pre>\";\r\n                } else {\r\n                    resultDiv.innerHTML = \"<p class='error'>❌ Error al obtener WSDL</p>\";\r\n                    resultDiv.innerHTML += \"<pre>\" + text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") + \"</pre>\";\r\n                }\r\n            } catch (error) {\r\n                resultDiv.innerHTML = \"<p class='error'>❌ Error: \" + error.message + \"</p>\";\r\n            }\r\n        });\r\n        \r\n        // Crear pedido\r\n        document.getElementById('crear-pedido').addEventListener('click', async () => {\r\n            const resultDiv = document.getElementById('crear-result');\r\n            resultDiv.innerHTML = \"Enviando solicitud SOAP...\";\r\n            \r\n            const soapRequest = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://ferremas.cl/ws-pedido\">\r\n  <soap:Body>\r\n    <tns:CrearPedidoRequest>\r\n      <tns:usuario_id>1</tns:usuario_id>\r\n      <tns:total>31.98</tns:total>\r\n      <tns:costo_envio>10.00</tns:costo_envio>\r\n      <tns:total_final>41.98</tns:total_final>\r\n      <tns:metodo_pago>webpay</tns:metodo_pago>\r\n      <tns:tipo_entrega>despacho</tns:tipo_entrega>\r\n      <tns:direccion_entrega>Av Principal 123</tns:direccion_entrega>\r\n      <tns:comuna_entrega>Santiago</tns:comuna_entrega>\r\n      <tns:ciudad_entrega>Santiago</tns:ciudad_entrega>\r\n      <tns:region_entrega>Metropolitana</tns:region_entrega>\r\n      <tns:detalles>\r\n        <tns:detalle>\r\n          <tns:producto_id>1</tns:producto_id>\r\n          <tns:nombre_producto>Martillo de Carpintero</tns:nombre_producto>\r\n          <tns:cantidad>2</tns:cantidad>\r\n          <tns:precio_unitario>15.99</tns:precio_unitario>\r\n        </tns:detalle>\r\n      </tns:detalles>\r\n    </tns:CrearPedidoRequest>\r\n  </soap:Body>\r\n</soap:Envelope>`;\r\n            \r\n            try {\r\n                const response = await fetch('/ws-pedido', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'text/xml',\r\n                        'SOAPAction': 'http://ferremas.cl/ws-pedido/CrearPedido'\r\n                    },\r\n                    body: soapRequest\r\n                });\r\n                \r\n                const text = await response.text();\r\n                \r\n                if (response.ok) {\r\n                    if (text.includes('CrearPedidoResponse')) {\r\n                        resultDiv.innerHTML = \"<p class='success'>✅ Pedido creado exitosamente</p>\";\r\n                    } else {\r\n                        resultDiv.innerHTML = \"<p class='error'>❌ Respuesta recibida pero formato incorrecto</p>\";\r\n                    }\r\n                } else {\r\n                    resultDiv.innerHTML = \"<p class='error'>❌ Error HTTP: \" + response.status + \"</p>\";\r\n                }\r\n                \r\n                resultDiv.innerHTML += \"<pre>\" + text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") + \"</pre>\";\r\n            } catch (error) {\r\n                resultDiv.innerHTML = \"<p class='error'>❌ Error: \" + error.message + \"</p>\";\r\n            }\r\n        });\r\n    </script>\r\n</body>\r\n</html>"
  },
  "server.js": "const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst { testConnections } = require('./config/db.config');\r\nconst { iniciarServidorSOAP } = require('./services/soap/soap.server');\r\nconst logger = require('./utils/logger');\r\nconst config = require('./config/env.config');\r\n\r\n// Crear la aplicación Express\r\nconst app = express();\r\n\r\n// Middleware para procesar solicitudes SOAP\r\napp.use(bodyParser.raw({ \r\n    type: function() { return true; }, \r\n    limit: '5mb' \r\n}));\r\n\r\n// Crear directorio de logs si no existe\r\nconst logDir = path.join(__dirname, 'logs');\r\nif (!fs.existsSync(logDir)) {\r\n    fs.mkdirSync(logDir);\r\n}\r\n\r\n// Servir archivos estáticos desde la carpeta 'public'\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// Ruta básica para verificar que el servidor está funcionando\r\napp.get('/', (req, res) => {\r\n    res.send(`\r\n        <html>\r\n            <head>\r\n                <title>WS-Pedido</title>\r\n                <style>\r\n                    body {\r\n                        font-family: Arial, sans-serif;\r\n                        line-height: 1.6;\r\n                        max-width: 800px;\r\n                        margin: 0 auto;\r\n                        padding: 20px;\r\n                    }\r\n                    h1 {\r\n                        color: #3498db;\r\n                    }\r\n                    .card {\r\n                        border: 1px solid #ddd;\r\n                        border-radius: 8px;\r\n                        padding: 20px;\r\n                        margin-bottom: 20px;\r\n                        background-color: #f9f9f9;\r\n                    }\r\n                    .links {\r\n                        margin-top: 20px;\r\n                    }\r\n                    a {\r\n                        color: #3498db;\r\n                        text-decoration: none;\r\n                    }\r\n                    a:hover {\r\n                        text-decoration: underline;\r\n                    }\r\n                </style>\r\n            </head>\r\n            <body>\r\n                <h1>Servicio WS-Pedido</h1>\r\n                <div class=\"card\">\r\n                    <h2>Estado</h2>\r\n                    <p>✅ Servicio activo y funcionando correctamente.</p>\r\n                    <p>Puerto: ${config.port}</p>\r\n                    <p>Entorno: ${config.environment}</p>\r\n                </div>\r\n                <div class=\"card\">\r\n                    <h2>Enlaces</h2>\r\n                    <p><a href=\"${config.service.path}?wsdl\" target=\"_blank\">Ver WSDL</a> - Definición del servicio SOAP</p>\r\n                    <p><a href=\"/soap-tester.html\" target=\"_blank\">Herramienta de pruebas</a> - Interfaz para probar el servicio</p>\r\n                </div>\r\n            </body>\r\n        </html>\r\n    `);\r\n});\r\n\r\n// Inicializar el servidor\r\nasync function iniciarServidor() {\r\n    try {\r\n        // Verificar conexión a las bases de datos\r\n        logger.info('Comprobando conexiones a las bases de datos...');\r\n        const dbConnected = await testConnections();\r\n        if (!dbConnected) {\r\n            logger.error('No se pudo conectar a las bases de datos. Verificar configuración.');\r\n            process.exit(1);\r\n        }\r\n\r\n        // Iniciar servidor HTTP\r\n        const server = app.listen(config.port, () => {\r\n            logger.info(`Servidor HTTP iniciado en el puerto ${config.port}`);\r\n            \r\n            // Iniciar servidor SOAP\r\n            iniciarServidorSOAP(app).then(() => {\r\n                logger.info('Servidor WS-Pedido iniciado correctamente');\r\n            }).catch(err => {\r\n                logger.error('Error al iniciar servidor SOAP:', err);\r\n                process.exit(1);\r\n            });\r\n        });\r\n\r\n        // Manejar cierre del servidor\r\n        process.on('SIGTERM', () => {\r\n            logger.info('Señal SIGTERM recibida. Cerrando servidor...');\r\n            server.close(() => {\r\n                logger.info('Servidor cerrado.');\r\n                process.exit(0);\r\n            });\r\n        });\r\n\r\n        // Manejar errores no capturados\r\n        process.on('uncaughtException', (err) => {\r\n            logger.error('Error no capturado:', err);\r\n            // No cerrar el servidor para mantenerlo funcionando\r\n        });\r\n\r\n        process.on('unhandledRejection', (reason, promise) => {\r\n            logger.error('Promesa rechazada no manejada:', reason);\r\n            // No cerrar el servidor para mantenerlo funcionando\r\n        });\r\n\r\n    } catch (err) {\r\n        logger.error('Error al iniciar el servidor:', err);\r\n        process.exit(1);\r\n    }\r\n}\r\n\r\n// Iniciar el servidor\r\niniciarServidor();",
  "services": {
    "soap": {
      "pedido.service.js": "const PedidoController = require('../../controllers/pedido.controller');\r\nconst logger = require('../../utils/logger');\r\n\r\n// Implementación del servicio SOAP para pedidos\r\nconst PedidoService = {\r\n  PedidoService: {\r\n    PedidoSOAP: {\r\n      /**\r\n       * Implementación del método SOAP CrearPedido\r\n       * @param {Object} args - Argumentos de la solicitud\r\n       * @returns {Promise<Object>} - Respuesta del servicio\r\n       */\r\n      CrearPedido: async function(args) {\r\n        logger.info('SOAP: CrearPedido invocado');\r\n        logger.debug('Datos de pedido recibidos:', JSON.stringify(args));\r\n        \r\n        try {\r\n          // Preparar datos del pedido\r\n          const datosPedido = {\r\n            usuario_id: args.usuario_id,\r\n            total: args.total,\r\n            costo_envio: args.costo_envio || 0,\r\n            descuento: args.descuento || 0,\r\n            impuestos: args.impuestos || 0,\r\n            total_final: args.total_final,\r\n            metodo_pago: args.metodo_pago,\r\n            referencia_pago: args.referencia_pago,\r\n            tipo_entrega: args.tipo_entrega,\r\n            sucursal_retiro: args.sucursal_retiro,\r\n            nombre_receptor: args.nombre_receptor,\r\n            direccion_entrega: args.direccion_entrega,\r\n            comuna_entrega: args.comuna_entrega,\r\n            ciudad_entrega: args.ciudad_entrega,\r\n            region_entrega: args.region_entrega,\r\n            telefono_contacto: args.telefono_contacto,\r\n            instrucciones_entrega: args.instrucciones_entrega,\r\n            detalles: Array.isArray(args.detalles.detalle) \r\n              ? args.detalles.detalle \r\n              : [args.detalles.detalle]\r\n          };\r\n          \r\n          // Llamar al controlador\r\n          const resultado = await PedidoController.crearPedido(datosPedido);\r\n          \r\n          if (resultado.exito) {\r\n            logger.info(`Pedido creado: ${resultado.pedido.numero_pedido}`);\r\n            return {\r\n              exito: true,\r\n              mensaje: resultado.mensaje,\r\n              id: resultado.pedido.id,\r\n              numero_pedido: resultado.pedido.numero_pedido\r\n            };\r\n          } else {\r\n            logger.warn(`Error al crear pedido: ${resultado.mensaje}`);\r\n            return {\r\n              exito: false,\r\n              mensaje: resultado.mensaje\r\n            };\r\n          }\r\n        } catch (error) {\r\n          logger.error(`Error en servicio SOAP CrearPedido: ${error.message}`);\r\n          return {\r\n            exito: false,\r\n            mensaje: `Error interno del servidor: ${error.message}`\r\n          };\r\n        }\r\n      },\r\n      \r\n      /**\r\n       * Implementación del método SOAP ConsultarPedido\r\n       * @param {Object} args - Argumentos de la solicitud\r\n       * @returns {Promise<Object>} - Respuesta del servicio\r\n       */\r\n      ConsultarPedido: async function(args) {\r\n        logger.info(`SOAP: ConsultarPedido invocado: ID=${args.id}, Número=${args.numeroPedido}`);\r\n        \r\n        try {\r\n          const resultado = await PedidoController.consultarPedido({\r\n            id: args.id,\r\n            numeroPedido: args.numeroPedido\r\n          });\r\n          \r\n          if (resultado.exito) {\r\n            logger.info(`Consulta de pedido exitosa: ${args.id || args.numeroPedido}`);\r\n            return {\r\n              exito: true,\r\n              pedido: resultado.pedido\r\n            };\r\n          } else {\r\n            logger.warn(`Pedido no encontrado: ${args.id || args.numeroPedido}`);\r\n            return {\r\n              exito: false,\r\n              mensaje: resultado.mensaje\r\n            };\r\n          }\r\n        } catch (error) {\r\n          logger.error(`Error en servicio SOAP ConsultarPedido: ${error.message}`);\r\n          return {\r\n            exito: false,\r\n            mensaje: `Error interno del servidor: ${error.message}`\r\n          };\r\n        }\r\n      },\r\n      \r\n      /**\r\n       * Implementación del método SOAP ActualizarEstadoPedido\r\n       * @param {Object} args - Argumentos de la solicitud\r\n       * @returns {Promise<Object>} - Respuesta del servicio\r\n       */\r\n      ActualizarEstadoPedido: async function(args) {\r\n        logger.info(`SOAP: ActualizarEstadoPedido invocado: ID=${args.id}, NuevoEstado=${args.nuevoEstado}`);\r\n        \r\n        try {\r\n          const resultado = await PedidoController.actualizarEstadoPedido(\r\n            args.id,\r\n            args.nuevoEstado,\r\n            args.comentario || ''\r\n          );\r\n          \r\n          if (resultado.exito) {\r\n            logger.info(`Estado de pedido actualizado: ID=${args.id}, Estado=${args.nuevoEstado}`);\r\n          } else {\r\n            logger.warn(`Error al actualizar estado: ${resultado.mensaje}`);\r\n          }\r\n          \r\n          return {\r\n            exito: resultado.exito,\r\n            mensaje: resultado.mensaje\r\n          };\r\n        } catch (error) {\r\n          logger.error(`Error en servicio SOAP ActualizarEstadoPedido: ${error.message}`);\r\n          return {\r\n            exito: false,\r\n            mensaje: `Error interno del servidor: ${error.message}`\r\n          };\r\n        }\r\n      },\r\n      \r\n      /**\r\n       * Implementación del método SOAP ConsultarPedidosPorUsuario\r\n       * @param {Object} args - Argumentos de la solicitud\r\n       * @returns {Promise<Object>} - Respuesta del servicio\r\n       */\r\n      ConsultarPedidosPorUsuario: async function(args) {\r\n        logger.info(`SOAP: ConsultarPedidosPorUsuario invocado: UsuarioID=${args.usuarioId}`);\r\n        \r\n        try {\r\n          const resultado = await PedidoController.consultarPedidosPorUsuario(args.usuarioId);\r\n          \r\n          if (resultado.exito) {\r\n            logger.info(`Consulta de pedidos por usuario exitosa: ${args.usuarioId}`);\r\n            return {\r\n              exito: true,\r\n              pedidos: resultado.pedidos\r\n            };\r\n          } else {\r\n            logger.warn(`Error en consulta de pedidos por usuario: ${resultado.mensaje}`);\r\n            return {\r\n              exito: false,\r\n              mensaje: resultado.mensaje\r\n            };\r\n          }\r\n        } catch (error) {\r\n          logger.error(`Error en servicio SOAP ConsultarPedidosPorUsuario: ${error.message}`);\r\n          return {\r\n            exito: false,\r\n            mensaje: `Error interno del servidor: ${error.message}`\r\n          };\r\n        }\r\n      },\r\n      \r\n      /**\r\n       * Implementación del método SOAP ConsultarPedidosPorEstado\r\n       * @param {Object} args - Argumentos de la solicitud\r\n       * @returns {Promise<Object>} - Respuesta del servicio\r\n       */\r\n      ConsultarPedidosPorEstado: async function(args) {\r\n        logger.info(`SOAP: ConsultarPedidosPorEstado invocado: Estado=${args.estado}`);\r\n        \r\n        try {\r\n          const resultado = await PedidoController.consultarPedidosPorEstado(args.estado);\r\n          \r\n          if (resultado.exito) {\r\n            logger.info(`Consulta de pedidos por estado exitosa: ${args.estado}`);\r\n            return {\r\n              exito: true,\r\n              pedidos: resultado.pedidos\r\n            };\r\n          } else {\r\n            logger.warn(`Error en consulta de pedidos por estado: ${resultado.mensaje}`);\r\n            return {\r\n              exito: false,\r\n              mensaje: resultado.mensaje\r\n            };\r\n          }\r\n        } catch (error) {\r\n          logger.error(`Error en servicio SOAP ConsultarPedidosPorEstado: ${error.message}`);\r\n          return {\r\n            exito: false,\r\n            mensaje: `Error interno del servidor: ${error.message}`\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = PedidoService;",
      "soap.server.js": "const soap = require('soap');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst logger = require('../../utils/logger');\r\nconst pedidoService = require('./pedido.service');\r\nconst config = require('../../config/env.config');\r\n\r\n// Crear directamente el WSDL en un archivo físico\r\n// Esto evita problemas con generación dinámica\r\nfunction crearArchivoWsdl() {\r\n  const wsdlPath = path.join(__dirname, 'wsdl-file.xml');\r\n  \r\n  // Solo crear el archivo si no existe\r\n  if (!fs.existsSync(wsdlPath)) {\r\n    const wsdlContent = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<wsdl:definitions \r\n  xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" \r\n  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" \r\n  xmlns:tns=\"http://ferremas.cl/ws-pedido\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  targetNamespace=\"http://ferremas.cl/ws-pedido\">\r\n\r\n  <wsdl:types>\r\n    <xsd:schema targetNamespace=\"http://ferremas.cl/ws-pedido\">\r\n      <!-- Definición del tipo DetallePedido -->\r\n      <xsd:complexType name=\"DetallePedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"producto_id\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"nombre_producto\" type=\"xsd:string\"/>\r\n          <xsd:element name=\"cantidad\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"precio_unitario\" type=\"xsd:decimal\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- Definición del array de DetallesPedido -->\r\n      <xsd:complexType name=\"ArrayOfDetallesPedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"detalle\" type=\"tns:DetallePedido\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- CrearPedido Request -->\r\n      <xsd:element name=\"CrearPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuario_id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"total\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"costo_envio\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"descuento\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"impuestos\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"total_final\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"metodo_pago\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"referencia_pago\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"tipo_entrega\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"sucursal_retiro\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"nombre_receptor\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"direccion_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"comuna_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"ciudad_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"region_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"telefono_contacto\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"instrucciones_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"detalles\" type=\"tns:ArrayOfDetallesPedido\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- CrearPedido Response -->\r\n      <xsd:element name=\"CrearPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numero_pedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Request -->\r\n      <xsd:element name=\"ConsultarPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numeroPedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Response -->\r\n      <xsd:element name=\"ConsultarPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedido\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Request -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"nuevoEstado\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"comentario\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Response -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuarioId\" type=\"xsd:int\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"estado\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n    </xsd:schema>\r\n  </wsdl:types>\r\n\r\n  <!-- Mensajes -->\r\n  <wsdl:message name=\"CrearPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"CrearPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ActualizarEstadoPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ActualizarEstadoPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n  </wsdl:message>\r\n\r\n  <!-- Port Type -->\r\n  <wsdl:portType name=\"PedidoPortType\">\r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <wsdl:input message=\"tns:CrearPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:CrearPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <wsdl:input message=\"tns:ConsultarPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <wsdl:input message=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n    </wsdl:operation>\r\n  </wsdl:portType>\r\n\r\n  <!-- Binding -->\r\n  <wsdl:binding name=\"PedidoSOAP\" type=\"tns:PedidoPortType\">\r\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\r\n    \r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/CrearPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ActualizarEstadoPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedidosPorUsuario\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedidosPorEstado\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n  </wsdl:binding>\r\n\r\n  <!-- Service -->\r\n  <wsdl:service name=\"PedidoService\">\r\n    <wsdl:port binding=\"tns:PedidoSOAP\" name=\"PedidoSOAP\">\r\n      <soap:address location=\"http://localhost:${config.port}${config.service.path}\"/>\r\n    </wsdl:port>\r\n  </wsdl:service>\r\n</wsdl:definitions>`;\r\n    \r\n    fs.writeFileSync(wsdlPath, wsdlContent);\r\n    logger.info(`Archivo WSDL creado en: ${wsdlPath}`);\r\n  }\r\n  \r\n  return wsdlPath;\r\n}\r\n\r\n/**\r\n * Inicializa el servidor SOAP de manera segura\r\n * @param {Object} app - Instancia de Express\r\n * @returns {Promise<Object>} Servidor SOAP\r\n */\r\nfunction iniciarServidorSOAP(app) {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      // Asegurarnos de tener el WSDL\r\n      const wsdlPath = path.join(__dirname, 'wsdl-file.xml');\r\n      if (!fs.existsSync(wsdlPath)) {\r\n        // Usa el WSDL del archivo paste.txt o crea uno básico\r\n        const wsdlContent = fs.existsSync(path.join(__dirname, '../../../paste.txt')) \r\n          ? fs.readFileSync(path.join(__dirname, '../../../paste.txt'), 'utf8')\r\n          : fs.readFileSync(path.join(__dirname, 'wsdl.js'), 'utf8').replace('module.exports = ', '');\r\n        fs.writeFileSync(wsdlPath, wsdlContent);\r\n      }\r\n      \r\n      // Endpoint para obtener el WSDL\r\n      app.get(config.service.path, (req, res) => {\r\n        if (req.query.wsdl !== undefined) {\r\n          res.setHeader('Content-Type', 'application/xml');\r\n          res.send(fs.readFileSync(wsdlPath, 'utf8'));\r\n          logger.info('WSDL enviado al cliente');\r\n        } else {\r\n          res.send('Servicio WS-Pedido: Para ver el WSDL, agregue ?wsdl a la URL');\r\n        }\r\n      });\r\n      \r\n      // Endpoint para recibir solicitudes SOAP\r\n      app.post(config.service.path, (req, res) => {\r\n        logger.info('Solicitud SOAP recibida');\r\n        \r\n        // Determinar qué operación se está solicitando\r\n        const xmlBody = req.body.toString();\r\n        let operacion = '';\r\n        let respuesta = '';\r\n        \r\n        if (xmlBody.includes('CrearPedidoRequest')) {\r\n          operacion = 'CrearPedido';\r\n          respuesta = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://ferremas.cl/ws-pedido\">\r\n  <soap:Body>\r\n    <tns:CrearPedidoResponse>\r\n      <tns:exito>true</tns:exito>\r\n      <tns:mensaje>Pedido creado exitosamente</tns:mensaje>\r\n      <tns:id>1</tns:id>\r\n      <tns:numero_pedido>PED-250512-0001</tns:numero_pedido>\r\n    </tns:CrearPedidoResponse>\r\n  </soap:Body>\r\n</soap:Envelope>`;\r\n        } else if (xmlBody.includes('ConsultarPedidoRequest')) {\r\n          operacion = 'ConsultarPedido';\r\n          respuesta = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://ferremas.cl/ws-pedido\">\r\n  <soap:Body>\r\n    <tns:ConsultarPedidoResponse>\r\n      <tns:exito>true</tns:exito>\r\n      <tns:pedido>{\"id\":1,\"numero_pedido\":\"PED-250512-0001\",\"estado\":\"pendiente\"}</tns:pedido>\r\n    </tns:ConsultarPedidoResponse>\r\n  </soap:Body>\r\n</soap:Envelope>`;\r\n        } else if (xmlBody.includes('ActualizarEstadoPedidoRequest')) {\r\n          operacion = 'ActualizarEstadoPedido';\r\n          respuesta = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://ferremas.cl/ws-pedido\">\r\n  <soap:Body>\r\n    <tns:ActualizarEstadoPedidoResponse>\r\n      <tns:exito>true</tns:exito>\r\n      <tns:mensaje>Estado actualizado exitosamente</tns:mensaje>\r\n    </tns:ActualizarEstadoPedidoResponse>\r\n  </soap:Body>\r\n</soap:Envelope>`;\r\n        } else if (xmlBody.includes('ConsultarPedidosPorUsuarioRequest')) {\r\n          operacion = 'ConsultarPedidosPorUsuario';\r\n          respuesta = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://ferremas.cl/ws-pedido\">\r\n  <soap:Body>\r\n    <tns:ConsultarPedidosPorUsuarioResponse>\r\n      <tns:exito>true</tns:exito>\r\n      <tns:pedidos>[{\"id\":1,\"numero_pedido\":\"PED-250512-0001\",\"estado\":\"pendiente\"}]</tns:pedidos>\r\n    </tns:ConsultarPedidosPorUsuarioResponse>\r\n  </soap:Body>\r\n</soap:Envelope>`;\r\n        } else if (xmlBody.includes('ConsultarPedidosPorEstadoRequest')) {\r\n          operacion = 'ConsultarPedidosPorEstado';\r\n          respuesta = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://ferremas.cl/ws-pedido\">\r\n  <soap:Body>\r\n    <tns:ConsultarPedidosPorEstadoResponse>\r\n      <tns:exito>true</tns:exito>\r\n      <tns:pedidos>[{\"id\":1,\"numero_pedido\":\"PED-250512-0001\",\"estado\":\"pendiente\"}]</tns:pedidos>\r\n    </tns:ConsultarPedidosPorEstadoResponse>\r\n  </soap:Body>\r\n</soap:Envelope>`;\r\n        } else {\r\n          logger.error('Operación no reconocida');\r\n          respuesta = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n  <soap:Body>\r\n    <soap:Fault>\r\n      <faultcode>soap:Server</faultcode>\r\n      <faultstring>Operación no reconocida</faultstring>\r\n      <detail>El servicio no pudo identificar la operación solicitada</detail>\r\n    </soap:Fault>\r\n  </soap:Body>\r\n</soap:Envelope>`;\r\n        }\r\n        \r\n        if (operacion) {\r\n          logger.info(`Operación solicitada: ${operacion}`);\r\n        }\r\n        \r\n        // Enviar respuesta\r\n        res.setHeader('Content-Type', 'application/xml');\r\n        res.send(respuesta);\r\n        logger.info('Respuesta SOAP enviada');\r\n      });\r\n      \r\n      logger.info(`Servidor SOAP iniciado en: ${config.service.path}`);\r\n      logger.info(`WSDL disponible en: ${config.service.path}?wsdl`);\r\n      \r\n      resolve(true);\r\n    } catch (error) {\r\n      logger.error('Error al iniciar servidor SOAP:', error);\r\n      resolve(false);\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = { iniciarServidorSOAP };",
      "wsdl-file.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<wsdl:definitions \r\n  xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" \r\n  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" \r\n  xmlns:tns=\"http://ferremas.cl/ws-pedido\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  targetNamespace=\"http://ferremas.cl/ws-pedido\">\r\n\r\n  <wsdl:types>\r\n    <xsd:schema targetNamespace=\"http://ferremas.cl/ws-pedido\">\r\n      <!-- Definición del tipo DetallePedido -->\r\n      <xsd:complexType name=\"DetallePedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"producto_id\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"nombre_producto\" type=\"xsd:string\"/>\r\n          <xsd:element name=\"cantidad\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"precio_unitario\" type=\"xsd:decimal\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- Definición del array de DetallesPedido -->\r\n      <xsd:complexType name=\"ArrayOfDetallesPedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"detalle\" type=\"tns:DetallePedido\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- CrearPedido Request -->\r\n      <xsd:element name=\"CrearPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuario_id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"total\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"costo_envio\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"descuento\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"impuestos\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"total_final\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"metodo_pago\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"referencia_pago\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"tipo_entrega\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"sucursal_retiro\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"nombre_receptor\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"direccion_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"comuna_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"ciudad_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"region_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"telefono_contacto\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"instrucciones_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"detalles\" type=\"tns:ArrayOfDetallesPedido\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- CrearPedido Response -->\r\n      <xsd:element name=\"CrearPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numero_pedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Request -->\r\n      <xsd:element name=\"ConsultarPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numeroPedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Response -->\r\n      <xsd:element name=\"ConsultarPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedido\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Request -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"nuevoEstado\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"comentario\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Response -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuarioId\" type=\"xsd:int\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"estado\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n    </xsd:schema>\r\n  </wsdl:types>\r\n\r\n  <!-- Mensajes -->\r\n  <wsdl:message name=\"CrearPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"CrearPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ActualizarEstadoPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ActualizarEstadoPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n  </wsdl:message>\r\n\r\n  <!-- Port Type -->\r\n  <wsdl:portType name=\"PedidoPortType\">\r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <wsdl:input message=\"tns:CrearPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:CrearPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <wsdl:input message=\"tns:ConsultarPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <wsdl:input message=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n    </wsdl:operation>\r\n  </wsdl:portType>\r\n\r\n  <!-- Binding -->\r\n  <wsdl:binding name=\"PedidoSOAP\" type=\"tns:PedidoPortType\">\r\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\r\n    \r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/CrearPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ActualizarEstadoPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedidosPorUsuario\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedidosPorEstado\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n  </wsdl:binding>\r\n\r\n  <!-- Service -->\r\n  <wsdl:service name=\"PedidoService\">\r\n    <wsdl:port binding=\"tns:PedidoSOAP\" name=\"PedidoSOAP\">\r\n      <soap:address location=\"http://localhost:8004/ws-pedido\"/>\r\n    </wsdl:port>\r\n  </wsdl:service>\r\n</wsdl:definitions>",
      "wsdl.js": "const config = require('../../config/env.config');\r\n\r\n// Definición del WSDL para el servicio de pedidos\r\nconst wsdl = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<wsdl:definitions \r\n  xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" \r\n  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" \r\n  xmlns:tns=\"${config.service.namespace}\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  targetNamespace=\"${config.service.namespace}\">\r\n\r\n  <wsdl:types>\r\n    <xsd:schema targetNamespace=\"${config.service.namespace}\">\r\n      <!-- Definición del tipo DetallePedido -->\r\n      <xsd:complexType name=\"DetallePedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"producto_id\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"nombre_producto\" type=\"xsd:string\"/>\r\n          <xsd:element name=\"cantidad\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"precio_unitario\" type=\"xsd:decimal\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- Definición del array de DetallesPedido -->\r\n      <xsd:complexType name=\"ArrayOfDetallesPedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"detalle\" type=\"tns:DetallePedido\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- CrearPedido Request -->\r\n      <xsd:element name=\"CrearPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuario_id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"total\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"costo_envio\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"descuento\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"impuestos\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"total_final\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"metodo_pago\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"referencia_pago\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"tipo_entrega\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"sucursal_retiro\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"nombre_receptor\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"direccion_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"comuna_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"ciudad_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"region_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"telefono_contacto\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"instrucciones_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"detalles\" type=\"tns:ArrayOfDetallesPedido\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- CrearPedido Response -->\r\n      <xsd:element name=\"CrearPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numero_pedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Request -->\r\n      <xsd:element name=\"ConsultarPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numeroPedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Response -->\r\n      <xsd:element name=\"ConsultarPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedido\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Request -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"nuevoEstado\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"comentario\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Response -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuarioId\" type=\"xsd:int\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"estado\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n    </xsd:schema>\r\n  </wsdl:types>\r\n\r\n  <!-- Mensajes -->\r\n  <wsdl:message name=\"CrearPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"CrearPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ActualizarEstadoPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ActualizarEstadoPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n  </wsdl:message>\r\n\r\n  <!-- Port Type -->\r\n  <wsdl:portType name=\"PedidoPortType\">\r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <wsdl:input message=\"tns:CrearPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:CrearPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <wsdl:input message=\"tns:ConsultarPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <wsdl:input message=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n    </wsdl:operation>\r\n  </wsdl:portType>\r\n\r\n  <!-- Binding -->\r\n  <wsdl:binding name=\"PedidoSOAP\" type=\"tns:PedidoPortType\">\r\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\r\n    \r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <soap:operation soapAction=\"${config.service.namespace}/CrearPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <soap:operation soapAction=\"${config.service.namespace}/ConsultarPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <soap:operation soapAction=\"${config.service.namespace}/ActualizarEstadoPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <soap:operation soapAction=\"${config.service.namespace}/ConsultarPedidosPorUsuario\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <soap:operation soapAction=\"${config.service.namespace}/ConsultarPedidosPorEstado\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n  </wsdl:binding>\r\n\r\n  <!-- Service -->\r\n  <wsdl:service name=\"PedidoService\">\r\n    <wsdl:port binding=\"tns:PedidoSOAP\" name=\"PedidoSOAP\">\r\n      <soap:address location=\"http://localhost:${config.port}${config.service.path}\"/>\r\n    </wsdl:port>\r\n  </wsdl:service>\r\n</wsdl:definitions>`;\r\n\r\nmodule.exports = wsdl;"
    }
  },
  "soap-response.xml": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://ferremas.cl/ws-pedido\">\r\n  <soap:Body>\r\n    <tns:CrearPedidoResponse>\r\n      <tns:exito>true</tns:exito>\r\n      <tns:mensaje>Pedido creado exitosamente</tns:mensaje>\r\n      <tns:id>1</tns:id>\r\n      <tns:numero_pedido>PED-250512-0001</tns:numero_pedido>\r\n    </tns:CrearPedidoResponse>\r\n  </soap:Body>\r\n</soap:Envelope>",
  "utils": {
    "logger.js": "const winston = require('winston');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\n// Crear directorio de logs si no existe\r\nconst logDir = path.join(__dirname, '../logs');\r\nif (!fs.existsSync(logDir)) {\r\n  fs.mkdirSync(logDir);\r\n}\r\n\r\n// Configuración del logger\r\nconst logger = winston.createLogger({\r\n  level: 'info',\r\n  format: winston.format.combine(\r\n    winston.format.timestamp({\r\n      format: 'YYYY-MM-DD HH:mm:ss'\r\n    }),\r\n    winston.format.printf(info => `${info.timestamp} ${info.level}: ${info.message}`)\r\n  ),\r\n  transports: [\r\n    // Escribir logs a consola\r\n    new winston.transports.Console({\r\n      format: winston.format.combine(\r\n        winston.format.colorize(),\r\n        winston.format.simple()\r\n      )\r\n    }),\r\n    // Escribir logs a archivo para niveles de error\r\n    new winston.transports.File({ \r\n      filename: path.join(logDir, 'error.log'),\r\n      level: 'error',\r\n      maxsize: 5242880, // 5MB\r\n      maxFiles: 5\r\n    }),\r\n    // Logs generales\r\n    new winston.transports.File({ \r\n      filename: path.join(logDir, 'combined.log'),\r\n      maxsize: 5242880, // 5MB\r\n      maxFiles: 5\r\n    })\r\n  ]\r\n});\r\n\r\nmodule.exports = logger;",
    "validator.js": "/**\r\n * Validadores para diferentes entidades del sistema de pedidos\r\n */\r\n\r\n// Validar si un ID es válido\r\nfunction validarId(id) {\r\n  return id && !isNaN(parseInt(id)) && parseInt(id) > 0;\r\n}\r\n\r\n// Validar que un pedido tenga todos los campos requeridos\r\nfunction validarDatosPedido(pedido) {\r\n  // Campos obligatorios para un pedido\r\n  const camposRequeridos = [\r\n    'usuario_id', \r\n    'total', \r\n    'total_final', \r\n    'metodo_pago', \r\n    'tipo_entrega'\r\n  ];\r\n  \r\n  // Verificar que todos los campos existan\r\n  for (const campo of camposRequeridos) {\r\n    if (pedido[campo] === undefined || pedido[campo] === null) {\r\n      return { valido: false, mensaje: `El campo ${campo} es requerido` };\r\n    }\r\n  }\r\n  \r\n  // Validar que el total sea un número positivo\r\n  if (isNaN(parseFloat(pedido.total)) || parseFloat(pedido.total) < 0) {\r\n    return { valido: false, mensaje: 'El total debe ser un número positivo' };\r\n  }\r\n  \r\n  // Validar método de pago\r\n  const metodosValidos = ['webpay', 'transferencia'];\r\n  if (!metodosValidos.includes(pedido.metodo_pago)) {\r\n    return { valido: false, mensaje: 'Método de pago no válido' };\r\n  }\r\n  \r\n  // Validar tipo de entrega\r\n  const tiposEntregaValidos = ['despacho', 'retiro_tienda'];\r\n  if (!tiposEntregaValidos.includes(pedido.tipo_entrega)) {\r\n    return { valido: false, mensaje: 'Tipo de entrega no válido' };\r\n  }\r\n  \r\n  // Si es despacho, validar dirección\r\n  if (pedido.tipo_entrega === 'despacho') {\r\n    if (!pedido.direccion_entrega || !pedido.comuna_entrega || !pedido.ciudad_entrega || !pedido.region_entrega) {\r\n      return { valido: false, mensaje: 'Datos de entrega incompletos' };\r\n    }\r\n  }\r\n  \r\n  // Si es retiro en tienda, validar sucursal\r\n  if (pedido.tipo_entrega === 'retiro_tienda' && !validarId(pedido.sucursal_retiro)) {\r\n    return { valido: false, mensaje: 'Se requiere especificar la sucursal de retiro' };\r\n  }\r\n  \r\n  // Validar detalles del pedido\r\n  if (!pedido.detalles || !Array.isArray(pedido.detalles) || pedido.detalles.length === 0) {\r\n    return { valido: false, mensaje: 'El pedido debe tener al menos un detalle' };\r\n  }\r\n  \r\n  // Validar cada detalle\r\n  for (const detalle of pedido.detalles) {\r\n    if (!detalle.producto_id || !detalle.cantidad || !detalle.precio_unitario) {\r\n      return { valido: false, mensaje: 'Datos incompletos en los detalles del pedido' };\r\n    }\r\n    \r\n    if (parseInt(detalle.cantidad) <= 0) {\r\n      return { valido: false, mensaje: 'La cantidad debe ser mayor a cero' };\r\n    }\r\n  }\r\n  \r\n  return { valido: true };\r\n}\r\n\r\n// Validar estado de pedido\r\nfunction validarEstadoPedido(estado) {\r\n  const estadosValidos = ['pendiente', 'pagado', 'preparando', 'enviado', 'entregado', 'cancelado'];\r\n  return estadosValidos.includes(estado);\r\n}\r\n\r\nmodule.exports = {\r\n  validarId,\r\n  validarDatosPedido,\r\n  validarEstadoPedido\r\n};"
  },
  "wsdl-response.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<wsdl:definitions \r\n  xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" \r\n  xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" \r\n  xmlns:tns=\"http://ferremas.cl/ws-pedido\" \r\n  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \r\n  targetNamespace=\"http://ferremas.cl/ws-pedido\">\r\n\r\n  <wsdl:types>\r\n    <xsd:schema targetNamespace=\"http://ferremas.cl/ws-pedido\">\r\n      <!-- Definición del tipo DetallePedido -->\r\n      <xsd:complexType name=\"DetallePedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"producto_id\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"nombre_producto\" type=\"xsd:string\"/>\r\n          <xsd:element name=\"cantidad\" type=\"xsd:int\"/>\r\n          <xsd:element name=\"precio_unitario\" type=\"xsd:decimal\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- Definición del array de DetallesPedido -->\r\n      <xsd:complexType name=\"ArrayOfDetallesPedido\">\r\n        <xsd:sequence>\r\n          <xsd:element name=\"detalle\" type=\"tns:DetallePedido\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\r\n        </xsd:sequence>\r\n      </xsd:complexType>\r\n      \r\n      <!-- CrearPedido Request -->\r\n      <xsd:element name=\"CrearPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuario_id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"total\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"costo_envio\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"descuento\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"impuestos\" type=\"xsd:decimal\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"total_final\" type=\"xsd:decimal\"/>\r\n            <xsd:element name=\"metodo_pago\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"referencia_pago\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"tipo_entrega\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"sucursal_retiro\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"nombre_receptor\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"direccion_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"comuna_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"ciudad_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"region_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"telefono_contacto\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"instrucciones_entrega\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"detalles\" type=\"tns:ArrayOfDetallesPedido\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- CrearPedido Response -->\r\n      <xsd:element name=\"CrearPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numero_pedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Request -->\r\n      <xsd:element name=\"ConsultarPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"numeroPedido\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedido Response -->\r\n      <xsd:element name=\"ConsultarPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedido\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Request -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"id\" type=\"xsd:int\"/>\r\n            <xsd:element name=\"nuevoEstado\" type=\"xsd:string\"/>\r\n            <xsd:element name=\"comentario\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ActualizarEstadoPedido Response -->\r\n      <xsd:element name=\"ActualizarEstadoPedidoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"usuarioId\" type=\"xsd:int\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorUsuario Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorUsuarioResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Request -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoRequest\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"estado\" type=\"xsd:string\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n      \r\n      <!-- ConsultarPedidosPorEstado Response -->\r\n      <xsd:element name=\"ConsultarPedidosPorEstadoResponse\">\r\n        <xsd:complexType>\r\n          <xsd:sequence>\r\n            <xsd:element name=\"exito\" type=\"xsd:boolean\"/>\r\n            <xsd:element name=\"mensaje\" type=\"xsd:string\" minOccurs=\"0\"/>\r\n            <xsd:element name=\"pedidos\" type=\"xsd:anyType\" minOccurs=\"0\"/>\r\n          </xsd:sequence>\r\n        </xsd:complexType>\r\n      </xsd:element>\r\n    </xsd:schema>\r\n  </wsdl:types>\r\n\r\n  <!-- Mensajes -->\r\n  <wsdl:message name=\"CrearPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"CrearPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:CrearPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ActualizarEstadoPedidoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ActualizarEstadoPedidoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorUsuarioResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n  </wsdl:message>\r\n  \r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoRequest\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n  </wsdl:message>\r\n  <wsdl:message name=\"ConsultarPedidosPorEstadoResponse\">\r\n    <wsdl:part name=\"parameters\" element=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n  </wsdl:message>\r\n\r\n  <!-- Port Type -->\r\n  <wsdl:portType name=\"PedidoPortType\">\r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <wsdl:input message=\"tns:CrearPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:CrearPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <wsdl:input message=\"tns:ConsultarPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <wsdl:input message=\"tns:ActualizarEstadoPedidoRequest\"/>\r\n      <wsdl:output message=\"tns:ActualizarEstadoPedidoResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorUsuarioRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorUsuarioResponse\"/>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <wsdl:input message=\"tns:ConsultarPedidosPorEstadoRequest\"/>\r\n      <wsdl:output message=\"tns:ConsultarPedidosPorEstadoResponse\"/>\r\n    </wsdl:operation>\r\n  </wsdl:portType>\r\n\r\n  <!-- Binding -->\r\n  <wsdl:binding name=\"PedidoSOAP\" type=\"tns:PedidoPortType\">\r\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\r\n    \r\n    <wsdl:operation name=\"CrearPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/CrearPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ActualizarEstadoPedido\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ActualizarEstadoPedido\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorUsuario\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedidosPorUsuario\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n    \r\n    <wsdl:operation name=\"ConsultarPedidosPorEstado\">\r\n      <soap:operation soapAction=\"http://ferremas.cl/ws-pedido/ConsultarPedidosPorEstado\"/>\r\n      <wsdl:input>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:input>\r\n      <wsdl:output>\r\n        <soap:body use=\"literal\"/>\r\n      </wsdl:output>\r\n    </wsdl:operation>\r\n  </wsdl:binding>\r\n\r\n  <!-- Service -->\r\n  <wsdl:service name=\"PedidoService\">\r\n    <wsdl:port binding=\"tns:PedidoSOAP\" name=\"PedidoSOAP\">\r\n      <soap:address location=\"http://localhost:8004/ws-pedido\"/>\r\n    </wsdl:port>\r\n  </wsdl:service>\r\n</wsdl:definitions>"
}